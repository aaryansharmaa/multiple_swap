{"id":"11dd762613b979e321c888c950481d03","_format":"hh-sol-build-info-1","solcVersion":"0.8.0","solcLongVersion":"0.8.0+commit.c7dfd78e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"contracts/SwapMultipleTokens.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract SwapMultipleTokens {\n    ISwapRouter public immutable swapRouter;\n    address public immutable WETH_ADDRESS;\n\n    constructor(ISwapRouter _swapRouter, address _wethAddress) {\n        swapRouter = _swapRouter;\n        WETH_ADDRESS = _wethAddress;\n    }\n\n    function swapMultipleTokens(\n        address tokenOut,\n        uint256 amountMaticIn,\n        uint256 amountWethIn,\n        uint256 amountOutMin,\n        address recipient,\n        uint256 deadline\n    ) external payable {\n        require(msg.value == amountMaticIn, \"Incorrect MATIC amount sent\");\n\n        if (amountMaticIn > 0) {\n            ISwapRouter.ExactInputSingleParams memory params1 =\n                ISwapRouter.ExactInputSingleParams({\n                    tokenIn: WETH_ADDRESS,\n                    tokenOut: tokenOut,\n                    fee: 3000,\n                    recipient: recipient,\n                    deadline: deadline,\n                    amountIn: amountMaticIn,\n                    amountOutMinimum: amountOutMin,\n                    sqrtPriceLimitX96: 0\n                });\n\n            swapRouter.exactInputSingle{value: amountMaticIn}(params1);\n        }\n\n        if (amountWethIn > 0) {\n            IERC20(WETH_ADDRESS).transferFrom(msg.sender, address(this), amountWethIn);\n            IERC20(WETH_ADDRESS).approve(address(swapRouter), amountWethIn);\n\n            ISwapRouter.ExactInputSingleParams memory params2 =\n                ISwapRouter.ExactInputSingleParams({\n                    tokenIn: WETH_ADDRESS,\n                    tokenOut: tokenOut,\n                    fee: 3000,\n                    recipient: recipient,\n                    deadline: deadline,\n                    amountIn: amountWethIn,\n                    amountOutMinimum: amountOutMin,\n                    sqrtPriceLimitX96: 0\n                });\n\n            swapRouter.exactInputSingle(params2);\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"58:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"152:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":8,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"243:2:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":8,"src":"269:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"269:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"268:9:0"},"scope":77,"src":"223:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"284:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":16,"src":"380:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"380:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"379:17:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":16,"src":"420:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"420:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"419:9:0"},"scope":77,"src":"361:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"435:209:0","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":26,"src":"667:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"667:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":26,"src":"686:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"686:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"666:35:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":26,"src":"720:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23,"name":"bool","nodeType":"ElementaryTypeName","src":"720:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"719:6:0"},"scope":77,"src":"649:77:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"732:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":36,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":36,"src":"1020:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":36,"src":"1035:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"1035:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1019:32:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":36,"src":"1075:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1074:9:0"},"scope":77,"src":"1001:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"1090:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":46,"src":"1754:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":46,"src":"1771:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"1771:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:33:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":46,"src":"1805:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"1805:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1804:6:0"},"scope":77,"src":"1737:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1817:296:0","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":58,"src":"2140:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"2140:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":58,"src":"2156:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"2156:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":58,"src":"2175:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"2175:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2139:51:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":58,"src":"2209:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"2209:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2208:6:0"},"scope":77,"src":"2118:97:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"2221:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":67,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":67,"src":"2399:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":67,"src":"2421:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2421:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":67,"src":"2441:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2398:57:0"},"src":"2384:72:0"},{"anonymous":false,"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"2462:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":76,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":76,"src":"2630:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"2630:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":76,"src":"2653:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":76,"src":"2678:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2629:63:0"},"src":"2615:78:0"}],"scope":78,"src":"129:2566:0"}],"src":"33:2663:0"},"id":0},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[91]},"id":92,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"71:144:1","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":91,"linearizedBaseContracts":[91],"name":"IUniswapV3SwapCallback","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"254:898:1","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":90,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"amount0Delta","nodeType":"VariableDeclaration","scope":90,"src":"1197:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":82,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"amount1Delta","nodeType":"VariableDeclaration","scope":90,"src":"1226:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":84,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":90,"src":"1255:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":86,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:1"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"1289:0:1"},"scope":91,"src":"1157:133:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":92,"src":"215:1077:1"}],"src":"45:1248:1"},"id":1},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[191],"IUniswapV3SwapCallback":[91]},"id":192,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":93,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:2"},{"id":94,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:2"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":95,"nodeType":"ImportDirective","scope":192,"sourceUnit":92,"src":"91:83:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":97,"name":"IUniswapV3SwapCallback","nodeType":"IdentifierPath","referencedDeclaration":91,"src":"305:22:2"},"id":98,"nodeType":"InheritanceSpecifier","src":"305:22:2"}],"contractDependencies":[91],"contractKind":"interface","documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"176:104:2","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":191,"linearizedBaseContracts":[191,91],"name":"ISwapRouter","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":115,"members":[{"constant":false,"id":100,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":115,"src":"374:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":99,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":115,"src":"399:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":115,"src":"425:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":103,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":115,"src":"445:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":108,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":115,"src":"472:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":110,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":115,"src":"498:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"amountOutMinimum","nodeType":"VariableDeclaration","scope":115,"src":"524:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":111,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"sqrtPriceLimitX96","nodeType":"VariableDeclaration","scope":115,"src":"558:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":113,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nodeType":"StructDefinition","scope":191,"src":"334:256:2","visibility":"public"},{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"596:250:2","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":124,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":124,"src":"877:38:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":118,"nodeType":"UserDefinedTypeName","pathNode":{"id":117,"name":"ExactInputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"877:22:2"},"referencedDeclaration":115,"src":"877:22:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:2"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":122,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":124,"src":"943:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:2"},"scope":191,"src":"851:111:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":135,"members":[{"constant":false,"id":126,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":135,"src":"1002:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":125,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":135,"src":"1022:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":135,"src":"1049:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":132,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":135,"src":"1075:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"amountOutMinimum","nodeType":"VariableDeclaration","scope":135,"src":"1101:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nodeType":"StructDefinition","scope":191,"src":"968:164:2","visibility":"public"},{"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"1138:273:2","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":144,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":144,"src":"1436:32:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$135_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":138,"nodeType":"UserDefinedTypeName","pathNode":{"id":137,"name":"ExactInputParams","nodeType":"IdentifierPath","referencedDeclaration":135,"src":"1436:16:2"},"referencedDeclaration":135,"src":"1436:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$135_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:2"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":144,"src":"1496:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:2"},"scope":191,"src":"1416:99:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":161,"members":[{"constant":false,"id":146,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":161,"src":"1562:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":161,"src":"1587:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":161,"src":"1613:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":149,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":161,"src":"1633:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":161,"src":"1660:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":156,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":161,"src":"1686:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"amountInMaximum","nodeType":"VariableDeclaration","scope":161,"src":"1713:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"sqrtPriceLimitX96","nodeType":"VariableDeclaration","scope":161,"src":"1746:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":159,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nodeType":"StructDefinition","scope":191,"src":"1521:257:2","visibility":"public"},{"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"1784:250:2","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":170,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":170,"src":"2066:39:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$161_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":164,"nodeType":"UserDefinedTypeName","pathNode":{"id":163,"name":"ExactOutputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":161,"src":"2066:23:2"},"referencedDeclaration":161,"src":"2066:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$161_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:2"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":170,"src":"2133:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:2"},"scope":191,"src":"2039:112:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":181,"members":[{"constant":false,"id":172,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":181,"src":"2192:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":171,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":181,"src":"2212:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":181,"src":"2239:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":181,"src":"2265:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"amountInMaximum","nodeType":"VariableDeclaration","scope":181,"src":"2292:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nodeType":"StructDefinition","scope":191,"src":"2157:165:2","visibility":"public"},{"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"2328:284:2","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":190,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nodeType":"FunctionDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":190,"src":"2638:33:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$181_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":184,"nodeType":"UserDefinedTypeName","pathNode":{"id":183,"name":"ExactOutputParams","nodeType":"IdentifierPath","referencedDeclaration":181,"src":"2638:17:2"},"referencedDeclaration":181,"src":"2638:17:2","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$181_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:2"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":190,"src":"2699:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:2"},"scope":191,"src":"2617:100:2","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":192,"src":"280:2439:2"}],"src":"45:2675:2"},"id":2},"contracts/SwapMultipleTokens.sol":{"ast":{"absolutePath":"contracts/SwapMultipleTokens.sol","exportedSymbols":{"IERC20":[77],"ISwapRouter":[191],"IUniswapV3SwapCallback":[91],"SwapMultipleTokens":[324]},"id":325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":193,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":194,"nodeType":"ImportDirective","scope":325,"sourceUnit":192,"src":"57:68:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":195,"nodeType":"ImportDirective","scope":325,"sourceUnit":78,"src":"126:56:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":324,"linearizedBaseContracts":[324],"name":"SwapMultipleTokens","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"c31c9c07","id":198,"mutability":"immutable","name":"swapRouter","nodeType":"VariableDeclaration","scope":324,"src":"218:39:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"},"typeName":{"id":197,"nodeType":"UserDefinedTypeName","pathNode":{"id":196,"name":"ISwapRouter","nodeType":"IdentifierPath","referencedDeclaration":191,"src":"218:11:3"},"referencedDeclaration":191,"src":"218:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"visibility":"public"},{"constant":false,"functionSelector":"040141e5","id":200,"mutability":"immutable","name":"WETH_ADDRESS","nodeType":"VariableDeclaration","scope":324,"src":"263:37:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"263:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"366:78:3","statements":[{"expression":{"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":208,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"376:10:3","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":209,"name":"_swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"389:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"src":"376:24:3","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"id":211,"nodeType":"ExpressionStatement","src":"376:24:3"},{"expression":{"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":212,"name":"WETH_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"410:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":213,"name":"_wethAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"425:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"410:27:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":215,"nodeType":"ExpressionStatement","src":"410:27:3"}]},"id":217,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"_swapRouter","nodeType":"VariableDeclaration","scope":217,"src":"319:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"},"typeName":{"id":202,"nodeType":"UserDefinedTypeName","pathNode":{"id":201,"name":"ISwapRouter","nodeType":"IdentifierPath","referencedDeclaration":191,"src":"319:11:3"},"referencedDeclaration":191,"src":"319:11:3","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"_wethAddress","nodeType":"VariableDeclaration","scope":217,"src":"344:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"344:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"318:47:3"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[],"src":"366:0:3"},"scope":324,"src":"307:137:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":322,"nodeType":"Block","src":"671:1401:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":233,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"689:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"689:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":235,"name":"amountMaticIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"702:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"689:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f7272656374204d4154494320616d6f756e742073656e74","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"717:29:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_be13686995925e60f35309fcc26152c62f017b3d549d5f4b1fb24765a5c28197","typeString":"literal_string \"Incorrect MATIC amount sent\""},"value":"Incorrect MATIC amount sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be13686995925e60f35309fcc26152c62f017b3d549d5f4b1fb24765a5c28197","typeString":"literal_string \"Incorrect MATIC amount sent\""}],"id":232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"681:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"681:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":239,"nodeType":"ExpressionStatement","src":"681:66:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":240,"name":"amountMaticIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"762:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"778:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"762:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":269,"nodeType":"IfStatement","src":"758:578:3","trueBody":{"id":268,"nodeType":"Block","src":"781:555:3","statements":[{"assignments":[247],"declarations":[{"constant":false,"id":247,"mutability":"mutable","name":"params1","nodeType":"VariableDeclaration","scope":268,"src":"795:49:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":246,"nodeType":"UserDefinedTypeName","pathNode":{"id":245,"name":"ISwapRouter.ExactInputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"795:34:3"},"referencedDeclaration":115,"src":"795:34:3","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"id":259,"initialValue":{"arguments":[{"id":250,"name":"WETH_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"929:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":251,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"973:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1008:4:3","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"},{"id":253,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"1045:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"1086:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":255,"name":"amountMaticIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1126:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":256,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"1179:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":248,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"863:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$191_$","typeString":"type(contract ISwapRouter)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":115,"src":"863:34:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","fee","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"863:389:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"795:457:3"},{"expression":{"arguments":[{"id":265,"name":"params1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1317:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"id":260,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"1267:10:3","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":124,"src":"1267:27:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":263,"name":"amountMaticIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1302:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1267:49:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$value","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1267:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":267,"nodeType":"ExpressionStatement","src":"1267:58:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":270,"name":"amountWethIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1350:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1365:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1350:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":321,"nodeType":"IfStatement","src":"1346:720:3","trueBody":{"id":320,"nodeType":"Block","src":"1368:698:3","statements":[{"expression":{"arguments":[{"expression":{"id":277,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1416:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1416:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":281,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1436:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_SwapMultipleTokens_$324","typeString":"contract SwapMultipleTokens"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SwapMultipleTokens_$324","typeString":"contract SwapMultipleTokens"}],"id":280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1428:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"1428:7:3","typeDescriptions":{}}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1428:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":283,"name":"amountWethIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1443:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":274,"name":"WETH_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"1389:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"1382:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1382:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":58,"src":"1382:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1382:74:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":285,"nodeType":"ExpressionStatement","src":"1382:74:3"},{"expression":{"arguments":[{"arguments":[{"id":292,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"1507:10:3","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}],"id":291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1499:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"1499:7:3","typeDescriptions":{}}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1499:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":294,"name":"amountWethIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1520:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":287,"name":"WETH_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"1477:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":286,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"1470:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$77_$","typeString":"type(contract IERC20)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1470:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$77","typeString":"contract IERC20"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":46,"src":"1470:28:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1470:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":296,"nodeType":"ExpressionStatement","src":"1470:63:3"},{"assignments":[301],"declarations":[{"constant":false,"id":301,"mutability":"mutable","name":"params2","nodeType":"VariableDeclaration","scope":320,"src":"1548:49:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":300,"nodeType":"UserDefinedTypeName","pathNode":{"id":299,"name":"ISwapRouter.ExactInputSingleParams","nodeType":"IdentifierPath","referencedDeclaration":115,"src":"1548:34:3"},"referencedDeclaration":115,"src":"1548:34:3","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"id":313,"initialValue":{"arguments":[{"id":304,"name":"WETH_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"1682:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"tokenOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"1726:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33303030","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1761:4:3","typeDescriptions":{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},"value":"3000"},{"id":307,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"1798:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":308,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"1839:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":309,"name":"amountWethIn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"1879:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":310,"name":"amountOutMin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"1931:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1984:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3000_by_1","typeString":"int_const 3000"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":302,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"1616:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$191_$","typeString":"type(contract ISwapRouter)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":115,"src":"1616:34:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","fee","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"1616:388:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"1548:456:3"},{"expression":{"arguments":[{"id":317,"name":"params2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":301,"src":"2047:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$115_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"id":314,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2019:10:3","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$191","typeString":"contract ISwapRouter"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":124,"src":"2019:27:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2019:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":319,"nodeType":"ExpressionStatement","src":"2019:36:3"}]}}]},"functionSelector":"88fb531b","id":323,"implemented":true,"kind":"function","modifiers":[],"name":"swapMultipleTokens","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":323,"src":"487:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"amountMaticIn","nodeType":"VariableDeclaration","scope":323,"src":"513:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"513:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"amountWethIn","nodeType":"VariableDeclaration","scope":323,"src":"544:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"544:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"amountOutMin","nodeType":"VariableDeclaration","scope":323,"src":"574:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":323,"src":"604:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":323,"src":"631:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"477:176:3"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"671:0:3"},"scope":324,"src":"450:1622:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":325,"src":"184:1890:3"}],"src":"32:2043:3"},"id":3}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}"}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}"}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}"}},"contracts/SwapMultipleTokens.sol":{"SwapMultipleTokens":{"abi":[{"inputs":[{"internalType":"contract ISwapRouter","name":"_swapRouter","type":"address"},{"internalType":"address","name":"_wethAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"WETH_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint256","name":"amountMaticIn","type":"uint256"},{"internalType":"uint256","name":"amountWethIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMin","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"swapMultipleTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"swapRouter","outputs":[{"internalType":"contract ISwapRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1473:4","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:4","statements":[{"nodeType":"YulAssignment","src":"80:22:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:4"},"nodeType":"YulFunctionCall","src":"89:13:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:4"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:4"},"nodeType":"YulFunctionCall","src":"111:33:4"},"nodeType":"YulExpressionStatement","src":"111:33:4"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:4","type":""}],"src":"7:143:4"},{"body":{"nodeType":"YulBlock","src":"238:99:4","statements":[{"nodeType":"YulAssignment","src":"248:22:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"263:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"257:5:4"},"nodeType":"YulFunctionCall","src":"257:13:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"248:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"325:5:4"}],"functionName":{"name":"validator_revert_t_contract$_ISwapRouter_$191","nodeType":"YulIdentifier","src":"279:45:4"},"nodeType":"YulFunctionCall","src":"279:52:4"},"nodeType":"YulExpressionStatement","src":"279:52:4"}]},"name":"abi_decode_t_contract$_ISwapRouter_$191_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"216:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"224:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"232:5:4","type":""}],"src":"156:181:4"},{"body":{"nodeType":"YulBlock","src":"456:365:4","statements":[{"body":{"nodeType":"YulBlock","src":"502:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"511:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"514:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"504:6:4"},"nodeType":"YulFunctionCall","src":"504:12:4"},"nodeType":"YulExpressionStatement","src":"504:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"477:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"486:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"473:3:4"},"nodeType":"YulFunctionCall","src":"473:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"498:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"469:3:4"},"nodeType":"YulFunctionCall","src":"469:32:4"},"nodeType":"YulIf","src":"466:2:4"},{"nodeType":"YulBlock","src":"528:147:4","statements":[{"nodeType":"YulVariableDeclaration","src":"543:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"557:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"547:6:4","type":""}]},{"nodeType":"YulAssignment","src":"572:93:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"637:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"648:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"633:3:4"},"nodeType":"YulFunctionCall","src":"633:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"657:7:4"}],"functionName":{"name":"abi_decode_t_contract$_ISwapRouter_$191_fromMemory","nodeType":"YulIdentifier","src":"582:50:4"},"nodeType":"YulFunctionCall","src":"582:83:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:4"}]}]},{"nodeType":"YulBlock","src":"685:129:4","statements":[{"nodeType":"YulVariableDeclaration","src":"700:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"714:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"704:6:4","type":""}]},{"nodeType":"YulAssignment","src":"730:74:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"776:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"787:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"772:3:4"},"nodeType":"YulFunctionCall","src":"772:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"796:7:4"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"740:31:4"},"nodeType":"YulFunctionCall","src":"740:64:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"730:6:4"}]}]}]},"name":"abi_decode_tuple_t_contract$_ISwapRouter_$191t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"418:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"429:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"441:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"449:6:4","type":""}],"src":"343:478:4"},{"body":{"nodeType":"YulBlock","src":"872:51:4","statements":[{"nodeType":"YulAssignment","src":"882:35:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"911:5:4"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"893:17:4"},"nodeType":"YulFunctionCall","src":"893:24:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"882:7:4"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"854:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"864:7:4","type":""}],"src":"827:96:4"},{"body":{"nodeType":"YulBlock","src":"993:51:4","statements":[{"nodeType":"YulAssignment","src":"1003:35:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1032:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1014:17:4"},"nodeType":"YulFunctionCall","src":"1014:24:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1003:7:4"}]}]},"name":"cleanup_t_contract$_ISwapRouter_$191","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"975:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"985:7:4","type":""}],"src":"929:115:4"},{"body":{"nodeType":"YulBlock","src":"1095:81:4","statements":[{"nodeType":"YulAssignment","src":"1105:65:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1120:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"1127:42:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1116:3:4"},"nodeType":"YulFunctionCall","src":"1116:54:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1105:7:4"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1077:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1087:7:4","type":""}],"src":"1050:126:4"},{"body":{"nodeType":"YulBlock","src":"1225:79:4","statements":[{"body":{"nodeType":"YulBlock","src":"1282:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1291:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1294:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1284:6:4"},"nodeType":"YulFunctionCall","src":"1284:12:4"},"nodeType":"YulExpressionStatement","src":"1284:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1248:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1273:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1255:17:4"},"nodeType":"YulFunctionCall","src":"1255:24:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1245:2:4"},"nodeType":"YulFunctionCall","src":"1245:35:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1238:6:4"},"nodeType":"YulFunctionCall","src":"1238:43:4"},"nodeType":"YulIf","src":"1235:2:4"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1218:5:4","type":""}],"src":"1182:122:4"},{"body":{"nodeType":"YulBlock","src":"1372:98:4","statements":[{"body":{"nodeType":"YulBlock","src":"1448:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1457:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1460:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1450:6:4"},"nodeType":"YulFunctionCall","src":"1450:12:4"},"nodeType":"YulExpressionStatement","src":"1450:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1395:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1439:5:4"}],"functionName":{"name":"cleanup_t_contract$_ISwapRouter_$191","nodeType":"YulIdentifier","src":"1402:36:4"},"nodeType":"YulFunctionCall","src":"1402:43:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1392:2:4"},"nodeType":"YulFunctionCall","src":"1392:54:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1385:6:4"},"nodeType":"YulFunctionCall","src":"1385:62:4"},"nodeType":"YulIf","src":"1382:2:4"}]},"name":"validator_revert_t_contract$_ISwapRouter_$191","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1365:5:4","type":""}],"src":"1310:160:4"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_ISwapRouter_$191_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ISwapRouter_$191(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ISwapRouter_$191t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ISwapRouter_$191_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ISwapRouter_$191(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ISwapRouter_$191(value) {\n        if iszero(eq(value, cleanup_t_contract$_ISwapRouter_$191(value))) { revert(0, 0) }\n    }\n\n}\n","id":4,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c060405234801561001057600080fd5b50604051610bd3380380610bd3833981810160405281019061003291906100d1565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505061017f565b6000815190506100b681610151565b92915050565b6000815190506100cb81610168565b92915050565b600080604083850312156100e457600080fd5b60006100f2858286016100bc565b9250506020610103858286016100a7565b9150509250929050565b600061011882610131565b9050919050565b600061012a8261010d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61015a8161010d565b811461016557600080fd5b50565b6101718161011f565b811461017c57600080fd5b50565b60805160601c60a05160601c6109f96101da6000396000818160ad0152818161012a0152818161029201528181610342015261041e0152600081816101da0152818161037e015281816104ce015261058401526109f96000f3fe6080604052600436106100345760003560e01c8063040141e51461003957806388fb531b14610064578063c31c9c0714610080575b600080fd5b34801561004557600080fd5b5061004e6100ab565b60405161005b9190610820565b60405180910390f35b61007e600480360381019061007991906105fa565b6100cf565b005b34801561008c57600080fd5b50610095610582565b6040516100a2919061089b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b843414610111576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610108906108b6565b60405180910390fd5b60008511156102875760006040518061010001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001878152602001858152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf38987836040518363ffffffff1660e01b815260040161023291906108d6565b6020604051808303818588803b15801561024b57600080fd5b505af115801561025f573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061028491906106ac565b50505b600084111561057a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016102ed9392919061083b565b602060405180830381600087803b15801561030757600080fd5b505af115801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f9190610683565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000866040518363ffffffff1660e01b81526004016103bb929190610872565b602060405180830381600087803b1580156103d557600080fd5b505af11580156103e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040d9190610683565b5060006040518061010001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001868152602001858152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161052591906108d6565b602060405180830381600087803b15801561053f57600080fd5b505af1158015610553573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057791906106ac565b50505b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000813590506105b58161097e565b92915050565b6000815190506105ca81610995565b92915050565b6000813590506105df816109ac565b92915050565b6000815190506105f4816109ac565b92915050565b60008060008060008060c0878903121561061357600080fd5b600061062189828a016105a6565b965050602061063289828a016105d0565b955050604061064389828a016105d0565b945050606061065489828a016105d0565b935050608061066589828a016105a6565b92505060a061067689828a016105d0565b9150509295509295509295565b60006020828403121561069557600080fd5b60006106a3848285016105bb565b91505092915050565b6000602082840312156106be57600080fd5b60006106cc848285016105e5565b91505092915050565b6106de81610903565b82525050565b6106ed81610903565b82525050565b6106fc8161095a565b82525050565b600061070f601b836108f2565b91507f496e636f7272656374204d4154494320616d6f756e742073656e7400000000006000830152602082019050919050565b6101008201600082015161075960008501826106d5565b50602082015161076c60208501826106d5565b50604082015161077f60408501826107f3565b50606082015161079260608501826106d5565b5060808201516107a56080850182610802565b5060a08201516107b860a0850182610802565b5060c08201516107cb60c0850182610802565b5060e08201516107de60e08501826107e4565b50505050565b6107ed81610921565b82525050565b6107fc81610941565b82525050565b61080b81610950565b82525050565b61081a81610950565b82525050565b600060208201905061083560008301846106e4565b92915050565b600060608201905061085060008301866106e4565b61085d60208301856106e4565b61086a6040830184610811565b949350505050565b600060408201905061088760008301856106e4565b6108946020830184610811565b9392505050565b60006020820190506108b060008301846106f3565b92915050565b600060208201905081810360008301526108cf81610702565b9050919050565b6000610100820190506108ec6000830184610742565b92915050565b600082825260208201905092915050565b600061090e82610921565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b60006109658261096c565b9050919050565b600061097782610921565b9050919050565b61098781610903565b811461099257600080fd5b50565b61099e81610915565b81146109a957600080fd5b50565b6109b581610950565b81146109c057600080fd5b5056fea264697066735822122076bb1f11f100a6da1e8cf9d947535f801f6ae43108e47d825834cf9c1574a38164736f6c63430008000033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBD3 CODESIZE SUB DUP1 PUSH2 0xBD3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xD1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP PUSH2 0x17F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB6 DUP2 PUSH2 0x151 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCB DUP2 PUSH2 0x168 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2 DUP6 DUP3 DUP7 ADD PUSH2 0xBC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x103 DUP6 DUP3 DUP7 ADD PUSH2 0xA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x118 DUP3 PUSH2 0x131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A DUP3 PUSH2 0x10D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A DUP2 PUSH2 0x10D JUMP JUMPDEST DUP2 EQ PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x171 DUP2 PUSH2 0x11F JUMP JUMPDEST DUP2 EQ PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0x9F9 PUSH2 0x1DA PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xAD ADD MSTORE DUP2 DUP2 PUSH2 0x12A ADD MSTORE DUP2 DUP2 PUSH2 0x292 ADD MSTORE DUP2 DUP2 PUSH2 0x342 ADD MSTORE PUSH2 0x41E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1DA ADD MSTORE DUP2 DUP2 PUSH2 0x37E ADD MSTORE DUP2 DUP2 PUSH2 0x4CE ADD MSTORE PUSH2 0x584 ADD MSTORE PUSH2 0x9F9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40141E5 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x88FB531B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0xCF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP5 CALLVALUE EQ PUSH2 0x111 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108 SWAP1 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP8 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x6AC JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x57A JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP3 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x553 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x6AC JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B5 DUP2 PUSH2 0x97E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5CA DUP2 PUSH2 0x995 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5DF DUP2 PUSH2 0x9AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5F4 DUP2 PUSH2 0x9AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x621 DUP10 DUP3 DUP11 ADD PUSH2 0x5A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x632 DUP10 DUP3 DUP11 ADD PUSH2 0x5D0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x643 DUP10 DUP3 DUP11 ADD PUSH2 0x5D0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x654 DUP10 DUP3 DUP11 ADD PUSH2 0x5D0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x665 DUP10 DUP3 DUP11 ADD PUSH2 0x5A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x676 DUP10 DUP3 DUP11 ADD PUSH2 0x5D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6A3 DUP5 DUP3 DUP6 ADD PUSH2 0x5BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6CC DUP5 DUP3 DUP6 ADD PUSH2 0x5E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0x903 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6ED DUP2 PUSH2 0x903 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6FC DUP2 PUSH2 0x95A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70F PUSH1 0x1B DUP4 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E636F7272656374204D4154494320616D6F756E742073656E740000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x759 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x6D5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x76C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x6D5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x77F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x7F3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x792 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x6D5 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x7A5 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x802 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x7B8 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x802 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x7CB PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x802 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x7DE PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x7E4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7ED DUP2 PUSH2 0x921 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7FC DUP2 PUSH2 0x941 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x80B DUP2 PUSH2 0x950 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x81A DUP2 PUSH2 0x950 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x835 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x850 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x85D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x86A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x811 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x887 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x894 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x811 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8CF DUP2 PUSH2 0x702 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x8EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90E DUP3 PUSH2 0x921 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x965 DUP3 PUSH2 0x96C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x977 DUP3 PUSH2 0x921 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x987 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP2 EQ PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x99E DUP2 PUSH2 0x915 JUMP JUMPDEST DUP2 EQ PUSH2 0x9A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9B5 DUP2 PUSH2 0x950 JUMP JUMPDEST DUP2 EQ PUSH2 0x9C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xBB1F11F100A6DA1E8CF9D947535F801F6AE43108E47D82 PC CALLVALUE 0xCF SWAP13 ISZERO PUSH21 0xA38164736F6C634300080000330000000000000000 ","sourceMap":"184:1890:3:-:0;;;307:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;389:11;376:24;;;;;;;;;;;;425:12;410:27;;;;;;;;;;;;307:137;;184:1890;;7:143:4;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:181::-;;263:6;257:13;248:22;;279:52;325:5;279:52;:::i;:::-;238:99;;;;:::o;343:478::-;;;498:2;486:9;477:7;473:23;469:32;466:2;;;514:1;511;504:12;466:2;557:1;582:83;657:7;648:6;637:9;633:22;582:83;:::i;:::-;572:93;;528:147;714:2;740:64;796:7;787:6;776:9;772:22;740:64;:::i;:::-;730:74;;685:129;456:365;;;;;:::o;827:96::-;;893:24;911:5;893:24;:::i;:::-;882:35;;872:51;;;:::o;929:115::-;;1014:24;1032:5;1014:24;:::i;:::-;1003:35;;993:51;;;:::o;1050:126::-;;1127:42;1120:5;1116:54;1105:65;;1095:81;;;:::o;1182:122::-;1255:24;1273:5;1255:24;:::i;:::-;1248:5;1245:35;1235:2;;1294:1;1291;1284:12;1235:2;1225:79;:::o;1310:160::-;1402:43;1439:5;1402:43;:::i;:::-;1395:5;1392:54;1382:2;;1460:1;1457;1450:12;1382:2;1372:98;:::o;184:1890:3:-;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8547:4","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:4","statements":[{"nodeType":"YulAssignment","src":"69:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:4"},"nodeType":"YulFunctionCall","src":"78:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:4"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:4"},"nodeType":"YulFunctionCall","src":"107:33:4"},"nodeType":"YulExpressionStatement","src":"107:33:4"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:4","type":""}],"src":"7:139:4"},{"body":{"nodeType":"YulBlock","src":"212:77:4","statements":[{"nodeType":"YulAssignment","src":"222:22:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"237:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"231:5:4"},"nodeType":"YulFunctionCall","src":"231:13:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"222:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"277:5:4"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"253:23:4"},"nodeType":"YulFunctionCall","src":"253:30:4"},"nodeType":"YulExpressionStatement","src":"253:30:4"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"190:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"198:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"206:5:4","type":""}],"src":"152:137:4"},{"body":{"nodeType":"YulBlock","src":"347:87:4","statements":[{"nodeType":"YulAssignment","src":"357:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"379:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"366:12:4"},"nodeType":"YulFunctionCall","src":"366:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"357:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"422:5:4"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"395:26:4"},"nodeType":"YulFunctionCall","src":"395:33:4"},"nodeType":"YulExpressionStatement","src":"395:33:4"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"325:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"333:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"341:5:4","type":""}],"src":"295:139:4"},{"body":{"nodeType":"YulBlock","src":"503:80:4","statements":[{"nodeType":"YulAssignment","src":"513:22:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"528:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"522:5:4"},"nodeType":"YulFunctionCall","src":"522:13:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"513:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"571:5:4"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"544:26:4"},"nodeType":"YulFunctionCall","src":"544:33:4"},"nodeType":"YulExpressionStatement","src":"544:33:4"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"481:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"489:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"497:5:4","type":""}],"src":"440:143:4"},{"body":{"nodeType":"YulBlock","src":"740:839:4","statements":[{"body":{"nodeType":"YulBlock","src":"787:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"796:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"799:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"789:6:4"},"nodeType":"YulFunctionCall","src":"789:12:4"},"nodeType":"YulExpressionStatement","src":"789:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"761:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"770:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"757:3:4"},"nodeType":"YulFunctionCall","src":"757:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"782:3:4","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"753:3:4"},"nodeType":"YulFunctionCall","src":"753:33:4"},"nodeType":"YulIf","src":"750:2:4"},{"nodeType":"YulBlock","src":"813:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"828:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"842:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"832:6:4","type":""}]},{"nodeType":"YulAssignment","src":"857:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"892:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"903:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"888:3:4"},"nodeType":"YulFunctionCall","src":"888:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"912:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"867:20:4"},"nodeType":"YulFunctionCall","src":"867:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"857:6:4"}]}]},{"nodeType":"YulBlock","src":"940:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"955:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"969:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"959:6:4","type":""}]},{"nodeType":"YulAssignment","src":"985:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1020:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1031:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1016:3:4"},"nodeType":"YulFunctionCall","src":"1016:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1040:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"995:20:4"},"nodeType":"YulFunctionCall","src":"995:53:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"985:6:4"}]}]},{"nodeType":"YulBlock","src":"1068:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1083:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1097:2:4","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1087:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1113:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1148:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1159:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1144:3:4"},"nodeType":"YulFunctionCall","src":"1144:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1168:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1123:20:4"},"nodeType":"YulFunctionCall","src":"1123:53:4"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1113:6:4"}]}]},{"nodeType":"YulBlock","src":"1196:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1211:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1225:2:4","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1215:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1241:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1276:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1287:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1272:3:4"},"nodeType":"YulFunctionCall","src":"1272:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1296:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1251:20:4"},"nodeType":"YulFunctionCall","src":"1251:53:4"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1241:6:4"}]}]},{"nodeType":"YulBlock","src":"1324:119:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1339:17:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1353:3:4","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1343:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1370:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1416:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:4"},"nodeType":"YulFunctionCall","src":"1401:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1425:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1380:20:4"},"nodeType":"YulFunctionCall","src":"1380:53:4"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1370:6:4"}]}]},{"nodeType":"YulBlock","src":"1453:119:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1468:17:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1482:3:4","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1472:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1499:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1534:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1545:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1530:3:4"},"nodeType":"YulFunctionCall","src":"1530:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1554:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1509:20:4"},"nodeType":"YulFunctionCall","src":"1509:53:4"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1499:6:4"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"670:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"681:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"693:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"701:6:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"709:6:4","type":""},{"name":"value3","nodeType":"YulTypedName","src":"717:6:4","type":""},{"name":"value4","nodeType":"YulTypedName","src":"725:6:4","type":""},{"name":"value5","nodeType":"YulTypedName","src":"733:6:4","type":""}],"src":"589:990:4"},{"body":{"nodeType":"YulBlock","src":"1659:204:4","statements":[{"body":{"nodeType":"YulBlock","src":"1705:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1714:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1717:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1707:6:4"},"nodeType":"YulFunctionCall","src":"1707:12:4"},"nodeType":"YulExpressionStatement","src":"1707:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1680:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"1689:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1676:3:4"},"nodeType":"YulFunctionCall","src":"1676:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"1701:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1672:3:4"},"nodeType":"YulFunctionCall","src":"1672:32:4"},"nodeType":"YulIf","src":"1669:2:4"},{"nodeType":"YulBlock","src":"1731:125:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1746:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1760:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1750:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1775:71:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1818:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1829:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1814:3:4"},"nodeType":"YulFunctionCall","src":"1814:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1838:7:4"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"1785:28:4"},"nodeType":"YulFunctionCall","src":"1785:61:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1775:6:4"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1629:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1640:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1652:6:4","type":""}],"src":"1585:278:4"},{"body":{"nodeType":"YulBlock","src":"1946:207:4","statements":[{"body":{"nodeType":"YulBlock","src":"1992:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2001:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2004:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1994:6:4"},"nodeType":"YulFunctionCall","src":"1994:12:4"},"nodeType":"YulExpressionStatement","src":"1994:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1967:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"1976:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1963:3:4"},"nodeType":"YulFunctionCall","src":"1963:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"1988:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1959:3:4"},"nodeType":"YulFunctionCall","src":"1959:32:4"},"nodeType":"YulIf","src":"1956:2:4"},{"nodeType":"YulBlock","src":"2018:128:4","statements":[{"nodeType":"YulVariableDeclaration","src":"2033:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"2047:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2037:6:4","type":""}]},{"nodeType":"YulAssignment","src":"2062:74:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2108:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"2119:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2104:3:4"},"nodeType":"YulFunctionCall","src":"2104:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2128:7:4"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2072:31:4"},"nodeType":"YulFunctionCall","src":"2072:64:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2062:6:4"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1916:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1927:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1939:6:4","type":""}],"src":"1869:284:4"},{"body":{"nodeType":"YulBlock","src":"2214:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2231:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2254:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2236:17:4"},"nodeType":"YulFunctionCall","src":"2236:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2224:6:4"},"nodeType":"YulFunctionCall","src":"2224:37:4"},"nodeType":"YulExpressionStatement","src":"2224:37:4"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2202:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2209:3:4","type":""}],"src":"2159:108:4"},{"body":{"nodeType":"YulBlock","src":"2338:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2355:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2378:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2360:17:4"},"nodeType":"YulFunctionCall","src":"2360:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2348:6:4"},"nodeType":"YulFunctionCall","src":"2348:37:4"},"nodeType":"YulExpressionStatement","src":"2348:37:4"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2326:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2333:3:4","type":""}],"src":"2273:118:4"},{"body":{"nodeType":"YulBlock","src":"2481:85:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2498:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2553:5:4"}],"functionName":{"name":"convert_t_contract$_ISwapRouter_$191_to_t_address","nodeType":"YulIdentifier","src":"2503:49:4"},"nodeType":"YulFunctionCall","src":"2503:56:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2491:6:4"},"nodeType":"YulFunctionCall","src":"2491:69:4"},"nodeType":"YulExpressionStatement","src":"2491:69:4"}]},"name":"abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2469:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2476:3:4","type":""}],"src":"2397:169:4"},{"body":{"nodeType":"YulBlock","src":"2718:179:4","statements":[{"nodeType":"YulAssignment","src":"2728:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2794:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"2799:2:4","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2735:58:4"},"nodeType":"YulFunctionCall","src":"2735:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2728:3:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2823:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"2828:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2819:3:4"},"nodeType":"YulFunctionCall","src":"2819:11:4"},{"kind":"string","nodeType":"YulLiteral","src":"2832:29:4","type":"","value":"Incorrect MATIC amount sent"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2812:6:4"},"nodeType":"YulFunctionCall","src":"2812:50:4"},"nodeType":"YulExpressionStatement","src":"2812:50:4"},{"nodeType":"YulAssignment","src":"2872:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2883:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"2888:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2879:3:4"},"nodeType":"YulFunctionCall","src":"2879:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2872:3:4"}]}]},"name":"abi_encode_t_stringliteral_be13686995925e60f35309fcc26152c62f017b3d549d5f4b1fb24765a5c28197_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2706:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2714:3:4","type":""}],"src":"2572:325:4"},{"body":{"nodeType":"YulBlock","src":"3141:1479:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3151:28:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3167:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3172:6:4","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3163:3:4"},"nodeType":"YulFunctionCall","src":"3163:16:4"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"3155:4:4","type":""}]},{"nodeType":"YulBlock","src":"3189:167:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3227:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3257:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"3264:4:4","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3253:3:4"},"nodeType":"YulFunctionCall","src":"3253:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3247:5:4"},"nodeType":"YulFunctionCall","src":"3247:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3231:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3317:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3335:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3340:4:4","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3331:3:4"},"nodeType":"YulFunctionCall","src":"3331:14:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3283:33:4"},"nodeType":"YulFunctionCall","src":"3283:63:4"},"nodeType":"YulExpressionStatement","src":"3283:63:4"}]},{"nodeType":"YulBlock","src":"3366:168:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3405:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3435:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"3442:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3431:3:4"},"nodeType":"YulFunctionCall","src":"3431:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3425:5:4"},"nodeType":"YulFunctionCall","src":"3425:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3409:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3495:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3513:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3518:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3509:3:4"},"nodeType":"YulFunctionCall","src":"3509:14:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3461:33:4"},"nodeType":"YulFunctionCall","src":"3461:63:4"},"nodeType":"YulExpressionStatement","src":"3461:63:4"}]},{"nodeType":"YulBlock","src":"3544:161:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3578:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3608:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"3615:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3604:3:4"},"nodeType":"YulFunctionCall","src":"3604:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3598:5:4"},"nodeType":"YulFunctionCall","src":"3598:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3582:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3666:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3684:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3689:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3680:3:4"},"nodeType":"YulFunctionCall","src":"3680:14:4"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulIdentifier","src":"3634:31:4"},"nodeType":"YulFunctionCall","src":"3634:61:4"},"nodeType":"YulExpressionStatement","src":"3634:61:4"}]},{"nodeType":"YulBlock","src":"3715:169:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3755:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3785:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"3792:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3781:3:4"},"nodeType":"YulFunctionCall","src":"3781:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3775:5:4"},"nodeType":"YulFunctionCall","src":"3775:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3759:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3845:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3863:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3868:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3859:3:4"},"nodeType":"YulFunctionCall","src":"3859:14:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3811:33:4"},"nodeType":"YulFunctionCall","src":"3811:63:4"},"nodeType":"YulExpressionStatement","src":"3811:63:4"}]},{"nodeType":"YulBlock","src":"3894:168:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3933:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3963:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"3970:4:4","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3959:3:4"},"nodeType":"YulFunctionCall","src":"3959:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3953:5:4"},"nodeType":"YulFunctionCall","src":"3953:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3937:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4023:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4041:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4046:4:4","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4037:3:4"},"nodeType":"YulFunctionCall","src":"4037:14:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3989:33:4"},"nodeType":"YulFunctionCall","src":"3989:63:4"},"nodeType":"YulExpressionStatement","src":"3989:63:4"}]},{"nodeType":"YulBlock","src":"4072:168:4","statements":[{"nodeType":"YulVariableDeclaration","src":"4111:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4141:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"4148:4:4","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4137:3:4"},"nodeType":"YulFunctionCall","src":"4137:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4131:5:4"},"nodeType":"YulFunctionCall","src":"4131:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4115:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4201:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4219:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4224:4:4","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4215:3:4"},"nodeType":"YulFunctionCall","src":"4215:14:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4167:33:4"},"nodeType":"YulFunctionCall","src":"4167:63:4"},"nodeType":"YulExpressionStatement","src":"4167:63:4"}]},{"nodeType":"YulBlock","src":"4250:176:4","statements":[{"nodeType":"YulVariableDeclaration","src":"4297:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"4334:4:4","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4323:3:4"},"nodeType":"YulFunctionCall","src":"4323:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4317:5:4"},"nodeType":"YulFunctionCall","src":"4317:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4301:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4387:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4405:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4410:4:4","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4401:3:4"},"nodeType":"YulFunctionCall","src":"4401:14:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4353:33:4"},"nodeType":"YulFunctionCall","src":"4353:63:4"},"nodeType":"YulExpressionStatement","src":"4353:63:4"}]},{"nodeType":"YulBlock","src":"4436:177:4","statements":[{"nodeType":"YulVariableDeclaration","src":"4484:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4514:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"4521:4:4","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4510:3:4"},"nodeType":"YulFunctionCall","src":"4510:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4504:5:4"},"nodeType":"YulFunctionCall","src":"4504:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4488:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4574:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4592:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4597:4:4","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4588:3:4"},"nodeType":"YulFunctionCall","src":"4588:14:4"}],"functionName":{"name":"abi_encode_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"4540:33:4"},"nodeType":"YulFunctionCall","src":"4540:63:4"},"nodeType":"YulExpressionStatement","src":"4540:63:4"}]}]},"name":"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3128:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3135:3:4","type":""}],"src":"2997:1623:4"},{"body":{"nodeType":"YulBlock","src":"4681:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4698:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4721:5:4"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"4703:17:4"},"nodeType":"YulFunctionCall","src":"4703:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4691:6:4"},"nodeType":"YulFunctionCall","src":"4691:37:4"},"nodeType":"YulExpressionStatement","src":"4691:37:4"}]},"name":"abi_encode_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4669:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4676:3:4","type":""}],"src":"4626:108:4"},{"body":{"nodeType":"YulBlock","src":"4793:52:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4810:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4832:5:4"}],"functionName":{"name":"cleanup_t_uint24","nodeType":"YulIdentifier","src":"4815:16:4"},"nodeType":"YulFunctionCall","src":"4815:23:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4803:6:4"},"nodeType":"YulFunctionCall","src":"4803:36:4"},"nodeType":"YulExpressionStatement","src":"4803:36:4"}]},"name":"abi_encode_t_uint24_to_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4781:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4788:3:4","type":""}],"src":"4740:105:4"},{"body":{"nodeType":"YulBlock","src":"4906:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4923:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4946:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4928:17:4"},"nodeType":"YulFunctionCall","src":"4928:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4916:6:4"},"nodeType":"YulFunctionCall","src":"4916:37:4"},"nodeType":"YulExpressionStatement","src":"4916:37:4"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4894:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4901:3:4","type":""}],"src":"4851:108:4"},{"body":{"nodeType":"YulBlock","src":"5030:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5047:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5070:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5052:17:4"},"nodeType":"YulFunctionCall","src":"5052:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5040:6:4"},"nodeType":"YulFunctionCall","src":"5040:37:4"},"nodeType":"YulExpressionStatement","src":"5040:37:4"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5025:3:4","type":""}],"src":"4965:118:4"},{"body":{"nodeType":"YulBlock","src":"5187:124:4","statements":[{"nodeType":"YulAssignment","src":"5197:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5209:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5220:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5205:3:4"},"nodeType":"YulFunctionCall","src":"5205:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5197:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5277:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5290:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5301:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5286:3:4"},"nodeType":"YulFunctionCall","src":"5286:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5233:43:4"},"nodeType":"YulFunctionCall","src":"5233:71:4"},"nodeType":"YulExpressionStatement","src":"5233:71:4"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5159:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5171:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5182:4:4","type":""}],"src":"5089:222:4"},{"body":{"nodeType":"YulBlock","src":"5471:288:4","statements":[{"nodeType":"YulAssignment","src":"5481:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5493:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5504:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5489:3:4"},"nodeType":"YulFunctionCall","src":"5489:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5481:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5561:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5574:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5585:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5570:3:4"},"nodeType":"YulFunctionCall","src":"5570:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5517:43:4"},"nodeType":"YulFunctionCall","src":"5517:71:4"},"nodeType":"YulExpressionStatement","src":"5517:71:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5642:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5655:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5666:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5651:3:4"},"nodeType":"YulFunctionCall","src":"5651:18:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5598:43:4"},"nodeType":"YulFunctionCall","src":"5598:72:4"},"nodeType":"YulExpressionStatement","src":"5598:72:4"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5724:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5737:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5748:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5733:3:4"},"nodeType":"YulFunctionCall","src":"5733:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5680:43:4"},"nodeType":"YulFunctionCall","src":"5680:72:4"},"nodeType":"YulExpressionStatement","src":"5680:72:4"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5427:9:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5439:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5447:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5455:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5466:4:4","type":""}],"src":"5317:442:4"},{"body":{"nodeType":"YulBlock","src":"5891:206:4","statements":[{"nodeType":"YulAssignment","src":"5901:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5913:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5924:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5909:3:4"},"nodeType":"YulFunctionCall","src":"5909:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5901:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5981:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5994:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6005:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5990:3:4"},"nodeType":"YulFunctionCall","src":"5990:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5937:43:4"},"nodeType":"YulFunctionCall","src":"5937:71:4"},"nodeType":"YulExpressionStatement","src":"5937:71:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6062:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6075:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6086:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6071:3:4"},"nodeType":"YulFunctionCall","src":"6071:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6018:43:4"},"nodeType":"YulFunctionCall","src":"6018:72:4"},"nodeType":"YulExpressionStatement","src":"6018:72:4"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5855:9:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5867:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5875:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5886:4:4","type":""}],"src":"5765:332:4"},{"body":{"nodeType":"YulBlock","src":"6220:143:4","statements":[{"nodeType":"YulAssignment","src":"6230:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6242:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6253:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6238:3:4"},"nodeType":"YulFunctionCall","src":"6238:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6230:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6329:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6342:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6353:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6338:3:4"},"nodeType":"YulFunctionCall","src":"6338:17:4"}],"functionName":{"name":"abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6266:62:4"},"nodeType":"YulFunctionCall","src":"6266:90:4"},"nodeType":"YulExpressionStatement","src":"6266:90:4"}]},"name":"abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6192:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6204:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6215:4:4","type":""}],"src":"6103:260:4"},{"body":{"nodeType":"YulBlock","src":"6540:248:4","statements":[{"nodeType":"YulAssignment","src":"6550:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6562:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6573:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6558:3:4"},"nodeType":"YulFunctionCall","src":"6558:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6550:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6597:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6608:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6593:3:4"},"nodeType":"YulFunctionCall","src":"6593:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6616:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"6622:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6612:3:4"},"nodeType":"YulFunctionCall","src":"6612:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6586:6:4"},"nodeType":"YulFunctionCall","src":"6586:47:4"},"nodeType":"YulExpressionStatement","src":"6586:47:4"},{"nodeType":"YulAssignment","src":"6642:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6776:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_be13686995925e60f35309fcc26152c62f017b3d549d5f4b1fb24765a5c28197_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6650:124:4"},"nodeType":"YulFunctionCall","src":"6650:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6642:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_be13686995925e60f35309fcc26152c62f017b3d549d5f4b1fb24765a5c28197__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6520:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6535:4:4","type":""}],"src":"6369:419:4"},{"body":{"nodeType":"YulBlock","src":"6970:203:4","statements":[{"nodeType":"YulAssignment","src":"6980:27:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6992:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"7003:3:4","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:4"},"nodeType":"YulFunctionCall","src":"6988:19:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6980:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7139:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7152:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"7163:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7148:3:4"},"nodeType":"YulFunctionCall","src":"7148:17:4"}],"functionName":{"name":"abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7017:121:4"},"nodeType":"YulFunctionCall","src":"7017:149:4"},"nodeType":"YulExpressionStatement","src":"7017:149:4"}]},"name":"abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6942:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6954:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6965:4:4","type":""}],"src":"6794:379:4"},{"body":{"nodeType":"YulBlock","src":"7275:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7292:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"7297:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7285:6:4"},"nodeType":"YulFunctionCall","src":"7285:19:4"},"nodeType":"YulExpressionStatement","src":"7285:19:4"},{"nodeType":"YulAssignment","src":"7313:29:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7332:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"7337:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7328:3:4"},"nodeType":"YulFunctionCall","src":"7328:14:4"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7313:11:4"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7247:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"7252:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7263:11:4","type":""}],"src":"7179:169:4"},{"body":{"nodeType":"YulBlock","src":"7399:51:4","statements":[{"nodeType":"YulAssignment","src":"7409:35:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7438:5:4"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7420:17:4"},"nodeType":"YulFunctionCall","src":"7420:24:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7409:7:4"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7381:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7391:7:4","type":""}],"src":"7354:96:4"},{"body":{"nodeType":"YulBlock","src":"7498:48:4","statements":[{"nodeType":"YulAssignment","src":"7508:32:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7533:5:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7526:6:4"},"nodeType":"YulFunctionCall","src":"7526:13:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7519:6:4"},"nodeType":"YulFunctionCall","src":"7519:21:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7508:7:4"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7480:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7490:7:4","type":""}],"src":"7456:90:4"},{"body":{"nodeType":"YulBlock","src":"7597:81:4","statements":[{"nodeType":"YulAssignment","src":"7607:65:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7622:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"7629:42:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7618:3:4"},"nodeType":"YulFunctionCall","src":"7618:54:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7607:7:4"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7579:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7589:7:4","type":""}],"src":"7552:126:4"},{"body":{"nodeType":"YulBlock","src":"7728:47:4","statements":[{"nodeType":"YulAssignment","src":"7738:31:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7753:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"7760:8:4","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7749:3:4"},"nodeType":"YulFunctionCall","src":"7749:20:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7738:7:4"}]}]},"name":"cleanup_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7710:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7720:7:4","type":""}],"src":"7684:91:4"},{"body":{"nodeType":"YulBlock","src":"7826:32:4","statements":[{"nodeType":"YulAssignment","src":"7836:16:4","value":{"name":"value","nodeType":"YulIdentifier","src":"7847:5:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7836:7:4"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7808:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7818:7:4","type":""}],"src":"7781:77:4"},{"body":{"nodeType":"YulBlock","src":"7943:85:4","statements":[{"nodeType":"YulAssignment","src":"7953:69:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8016:5:4"}],"functionName":{"name":"convert_t_contract$_ISwapRouter_$191_to_t_uint160","nodeType":"YulIdentifier","src":"7966:49:4"},"nodeType":"YulFunctionCall","src":"7966:56:4"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7953:9:4"}]}]},"name":"convert_t_contract$_ISwapRouter_$191_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7923:5:4","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7933:9:4","type":""}],"src":"7864:164:4"},{"body":{"nodeType":"YulBlock","src":"8113:53:4","statements":[{"nodeType":"YulAssignment","src":"8123:37:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8154:5:4"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"8136:17:4"},"nodeType":"YulFunctionCall","src":"8136:24:4"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"8123:9:4"}]}]},"name":"convert_t_contract$_ISwapRouter_$191_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8093:5:4","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"8103:9:4","type":""}],"src":"8034:132:4"},{"body":{"nodeType":"YulBlock","src":"8215:79:4","statements":[{"body":{"nodeType":"YulBlock","src":"8272:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8281:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8284:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8274:6:4"},"nodeType":"YulFunctionCall","src":"8274:12:4"},"nodeType":"YulExpressionStatement","src":"8274:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8238:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8263:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8245:17:4"},"nodeType":"YulFunctionCall","src":"8245:24:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8235:2:4"},"nodeType":"YulFunctionCall","src":"8235:35:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8228:6:4"},"nodeType":"YulFunctionCall","src":"8228:43:4"},"nodeType":"YulIf","src":"8225:2:4"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8208:5:4","type":""}],"src":"8172:122:4"},{"body":{"nodeType":"YulBlock","src":"8340:76:4","statements":[{"body":{"nodeType":"YulBlock","src":"8394:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8403:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8406:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8396:6:4"},"nodeType":"YulFunctionCall","src":"8396:12:4"},"nodeType":"YulExpressionStatement","src":"8396:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8363:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8385:5:4"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"8370:14:4"},"nodeType":"YulFunctionCall","src":"8370:21:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8360:2:4"},"nodeType":"YulFunctionCall","src":"8360:32:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8353:6:4"},"nodeType":"YulFunctionCall","src":"8353:40:4"},"nodeType":"YulIf","src":"8350:2:4"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8333:5:4","type":""}],"src":"8300:116:4"},{"body":{"nodeType":"YulBlock","src":"8465:79:4","statements":[{"body":{"nodeType":"YulBlock","src":"8522:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8531:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8534:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8524:6:4"},"nodeType":"YulFunctionCall","src":"8524:12:4"},"nodeType":"YulExpressionStatement","src":"8524:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8488:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8513:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8495:17:4"},"nodeType":"YulFunctionCall","src":"8495:24:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8485:2:4"},"nodeType":"YulFunctionCall","src":"8485:35:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8478:6:4"},"nodeType":"YulFunctionCall","src":"8478:43:4"},"nodeType":"YulIf","src":"8475:2:4"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8458:5:4","type":""}],"src":"8422:122:4"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$191_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_be13686995925e60f35309fcc26152c62f017b3d549d5f4b1fb24765a5c28197_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n\n        mstore(add(pos, 0), \"Incorrect MATIC amount sent\")\n\n        end := add(pos, 32)\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$191__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$191_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_be13686995925e60f35309fcc26152c62f017b3d549d5f4b1fb24765a5c28197__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be13686995925e60f35309fcc26152c62f017b3d549d5f4b1fb24765a5c28197_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ISwapRouter_$191_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISwapRouter_$191_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$191_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":4,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"198":[{"length":32,"start":474},{"length":32,"start":894},{"length":32,"start":1230},{"length":32,"start":1412}],"200":[{"length":32,"start":173},{"length":32,"start":298},{"length":32,"start":658},{"length":32,"start":834},{"length":32,"start":1054}]},"linkReferences":{},"object":"6080604052600436106100345760003560e01c8063040141e51461003957806388fb531b14610064578063c31c9c0714610080575b600080fd5b34801561004557600080fd5b5061004e6100ab565b60405161005b9190610820565b60405180910390f35b61007e600480360381019061007991906105fa565b6100cf565b005b34801561008c57600080fd5b50610095610582565b6040516100a2919061089b565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b843414610111576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610108906108b6565b60405180910390fd5b60008511156102875760006040518061010001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001878152602001858152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf38987836040518363ffffffff1660e01b815260040161023291906108d6565b6020604051808303818588803b15801561024b57600080fd5b505af115801561025f573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061028491906106ac565b50505b600084111561057a577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016102ed9392919061083b565b602060405180830381600087803b15801561030757600080fd5b505af115801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f9190610683565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000866040518363ffffffff1660e01b81526004016103bb929190610872565b602060405180830381600087803b1580156103d557600080fd5b505af11580156103e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040d9190610683565b5060006040518061010001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001868152602001858152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161052591906108d6565b602060405180830381600087803b15801561053f57600080fd5b505af1158015610553573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057791906106ac565b50505b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000813590506105b58161097e565b92915050565b6000815190506105ca81610995565b92915050565b6000813590506105df816109ac565b92915050565b6000815190506105f4816109ac565b92915050565b60008060008060008060c0878903121561061357600080fd5b600061062189828a016105a6565b965050602061063289828a016105d0565b955050604061064389828a016105d0565b945050606061065489828a016105d0565b935050608061066589828a016105a6565b92505060a061067689828a016105d0565b9150509295509295509295565b60006020828403121561069557600080fd5b60006106a3848285016105bb565b91505092915050565b6000602082840312156106be57600080fd5b60006106cc848285016105e5565b91505092915050565b6106de81610903565b82525050565b6106ed81610903565b82525050565b6106fc8161095a565b82525050565b600061070f601b836108f2565b91507f496e636f7272656374204d4154494320616d6f756e742073656e7400000000006000830152602082019050919050565b6101008201600082015161075960008501826106d5565b50602082015161076c60208501826106d5565b50604082015161077f60408501826107f3565b50606082015161079260608501826106d5565b5060808201516107a56080850182610802565b5060a08201516107b860a0850182610802565b5060c08201516107cb60c0850182610802565b5060e08201516107de60e08501826107e4565b50505050565b6107ed81610921565b82525050565b6107fc81610941565b82525050565b61080b81610950565b82525050565b61081a81610950565b82525050565b600060208201905061083560008301846106e4565b92915050565b600060608201905061085060008301866106e4565b61085d60208301856106e4565b61086a6040830184610811565b949350505050565b600060408201905061088760008301856106e4565b6108946020830184610811565b9392505050565b60006020820190506108b060008301846106f3565b92915050565b600060208201905081810360008301526108cf81610702565b9050919050565b6000610100820190506108ec6000830184610742565b92915050565b600082825260208201905092915050565b600061090e82610921565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b60006109658261096c565b9050919050565b600061097782610921565b9050919050565b61098781610903565b811461099257600080fd5b50565b61099e81610915565b81146109a957600080fd5b50565b6109b581610950565b81146109c057600080fd5b5056fea264697066735822122076bb1f11f100a6da1e8cf9d947535f801f6ae43108e47d825834cf9c1574a38164736f6c63430008000033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40141E5 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x88FB531B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0xCF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP5 CALLVALUE EQ PUSH2 0x111 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108 SWAP1 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP8 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x6AC JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x57A JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP3 SWAP2 SWAP1 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x683 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x525 SWAP2 SWAP1 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x553 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x577 SWAP2 SWAP1 PUSH2 0x6AC JUMP JUMPDEST POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B5 DUP2 PUSH2 0x97E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5CA DUP2 PUSH2 0x995 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5DF DUP2 PUSH2 0x9AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5F4 DUP2 PUSH2 0x9AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x621 DUP10 DUP3 DUP11 ADD PUSH2 0x5A6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x632 DUP10 DUP3 DUP11 ADD PUSH2 0x5D0 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x643 DUP10 DUP3 DUP11 ADD PUSH2 0x5D0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x654 DUP10 DUP3 DUP11 ADD PUSH2 0x5D0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x665 DUP10 DUP3 DUP11 ADD PUSH2 0x5A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x676 DUP10 DUP3 DUP11 ADD PUSH2 0x5D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6A3 DUP5 DUP3 DUP6 ADD PUSH2 0x5BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6CC DUP5 DUP3 DUP6 ADD PUSH2 0x5E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0x903 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6ED DUP2 PUSH2 0x903 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6FC DUP2 PUSH2 0x95A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70F PUSH1 0x1B DUP4 PUSH2 0x8F2 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E636F7272656374204D4154494320616D6F756E742073656E740000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x759 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x6D5 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x76C PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x6D5 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x77F PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x7F3 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x792 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x6D5 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x7A5 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x802 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x7B8 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x802 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x7CB PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x802 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x7DE PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x7E4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7ED DUP2 PUSH2 0x921 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7FC DUP2 PUSH2 0x941 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x80B DUP2 PUSH2 0x950 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x81A DUP2 PUSH2 0x950 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x835 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x850 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x85D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x86A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x811 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x887 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x894 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x811 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8CF DUP2 PUSH2 0x702 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x8EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90E DUP3 PUSH2 0x921 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x965 DUP3 PUSH2 0x96C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x977 DUP3 PUSH2 0x921 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x987 DUP2 PUSH2 0x903 JUMP JUMPDEST DUP2 EQ PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x99E DUP2 PUSH2 0x915 JUMP JUMPDEST DUP2 EQ PUSH2 0x9A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9B5 DUP2 PUSH2 0x950 JUMP JUMPDEST DUP2 EQ PUSH2 0x9C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xBB1F11F100A6DA1E8CF9D947535F801F6AE43108E47D82 PC CALLVALUE 0xCF SWAP13 ISZERO PUSH21 0xA38164736F6C634300080000330000000000000000 ","sourceMap":"184:1890:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;263:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;450:1622;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;218:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;263:37;;;:::o;450:1622::-;702:13;689:9;:26;681:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;778:1;762:13;:17;758:578;;;795:49;863:389;;;;;;;;929:12;863:389;;;;;;973:8;863:389;;;;;;1008:4;863:389;;;;;;1045:9;863:389;;;;;;1086:8;863:389;;;;1126:13;863:389;;;;1179:12;863:389;;;;1232:1;863:389;;;;;795:457;;1267:10;:27;;;1302:13;1317:7;1267:58;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;758:578;;1365:1;1350:12;:16;1346:720;;;1389:12;1382:33;;;1416:10;1436:4;1443:12;1382:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1477:12;1470:28;;;1507:10;1520:12;1470:63;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1548:49;1616:388;;;;;;;;1682:12;1616:388;;;;;;1726:8;1616:388;;;;;;1761:4;1616:388;;;;;;1798:9;1616:388;;;;;;1839:8;1616:388;;;;1879:12;1616:388;;;;1931:12;1616:388;;;;1984:1;1616:388;;;;;1548:456;;2019:10;:27;;;2047:7;2019:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1346:720;;450:1622;;;;;;:::o;218:39::-;;;:::o;7:139:4:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:143::-;;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;503:80;;;;:::o;589:990::-;;;;;;;782:3;770:9;761:7;757:23;753:33;750:2;;;799:1;796;789:12;750:2;842:1;867:53;912:7;903:6;892:9;888:22;867:53;:::i;:::-;857:63;;813:117;969:2;995:53;1040:7;1031:6;1020:9;1016:22;995:53;:::i;:::-;985:63;;940:118;1097:2;1123:53;1168:7;1159:6;1148:9;1144:22;1123:53;:::i;:::-;1113:63;;1068:118;1225:2;1251:53;1296:7;1287:6;1276:9;1272:22;1251:53;:::i;:::-;1241:63;;1196:118;1353:3;1380:53;1425:7;1416:6;1405:9;1401:22;1380:53;:::i;:::-;1370:63;;1324:119;1482:3;1509:53;1554:7;1545:6;1534:9;1530:22;1509:53;:::i;:::-;1499:63;;1453:119;740:839;;;;;;;;:::o;1585:278::-;;1701:2;1689:9;1680:7;1676:23;1672:32;1669:2;;;1717:1;1714;1707:12;1669:2;1760:1;1785:61;1838:7;1829:6;1818:9;1814:22;1785:61;:::i;:::-;1775:71;;1731:125;1659:204;;;;:::o;1869:284::-;;1988:2;1976:9;1967:7;1963:23;1959:32;1956:2;;;2004:1;2001;1994:12;1956:2;2047:1;2072:64;2128:7;2119:6;2108:9;2104:22;2072:64;:::i;:::-;2062:74;;2018:128;1946:207;;;;:::o;2159:108::-;2236:24;2254:5;2236:24;:::i;:::-;2231:3;2224:37;2214:53;;:::o;2273:118::-;2360:24;2378:5;2360:24;:::i;:::-;2355:3;2348:37;2338:53;;:::o;2397:169::-;2503:56;2553:5;2503:56;:::i;:::-;2498:3;2491:69;2481:85;;:::o;2572:325::-;;2735:67;2799:2;2794:3;2735:67;:::i;:::-;2728:74;;2832:29;2828:1;2823:3;2819:11;2812:50;2888:2;2883:3;2879:12;2872:19;;2718:179;;;:::o;2997:1623::-;3172:6;3167:3;3163:16;3264:4;3257:5;3253:16;3247:23;3283:63;3340:4;3335:3;3331:14;3317:12;3283:63;:::i;:::-;3189:167;3442:4;3435:5;3431:16;3425:23;3461:63;3518:4;3513:3;3509:14;3495:12;3461:63;:::i;:::-;3366:168;3615:4;3608:5;3604:16;3598:23;3634:61;3689:4;3684:3;3680:14;3666:12;3634:61;:::i;:::-;3544:161;3792:4;3785:5;3781:16;3775:23;3811:63;3868:4;3863:3;3859:14;3845:12;3811:63;:::i;:::-;3715:169;3970:4;3963:5;3959:16;3953:23;3989:63;4046:4;4041:3;4037:14;4023:12;3989:63;:::i;:::-;3894:168;4148:4;4141:5;4137:16;4131:23;4167:63;4224:4;4219:3;4215:14;4201:12;4167:63;:::i;:::-;4072:168;4334:4;4327:5;4323:16;4317:23;4353:63;4410:4;4405:3;4401:14;4387:12;4353:63;:::i;:::-;4250:176;4521:4;4514:5;4510:16;4504:23;4540:63;4597:4;4592:3;4588:14;4574:12;4540:63;:::i;:::-;4436:177;3141:1479;;;:::o;4626:108::-;4703:24;4721:5;4703:24;:::i;:::-;4698:3;4691:37;4681:53;;:::o;4740:105::-;4815:23;4832:5;4815:23;:::i;:::-;4810:3;4803:36;4793:52;;:::o;4851:108::-;4928:24;4946:5;4928:24;:::i;:::-;4923:3;4916:37;4906:53;;:::o;4965:118::-;5052:24;5070:5;5052:24;:::i;:::-;5047:3;5040:37;5030:53;;:::o;5089:222::-;;5220:2;5209:9;5205:18;5197:26;;5233:71;5301:1;5290:9;5286:17;5277:6;5233:71;:::i;:::-;5187:124;;;;:::o;5317:442::-;;5504:2;5493:9;5489:18;5481:26;;5517:71;5585:1;5574:9;5570:17;5561:6;5517:71;:::i;:::-;5598:72;5666:2;5655:9;5651:18;5642:6;5598:72;:::i;:::-;5680;5748:2;5737:9;5733:18;5724:6;5680:72;:::i;:::-;5471:288;;;;;;:::o;5765:332::-;;5924:2;5913:9;5909:18;5901:26;;5937:71;6005:1;5994:9;5990:17;5981:6;5937:71;:::i;:::-;6018:72;6086:2;6075:9;6071:18;6062:6;6018:72;:::i;:::-;5891:206;;;;;:::o;6103:260::-;;6253:2;6242:9;6238:18;6230:26;;6266:90;6353:1;6342:9;6338:17;6329:6;6266:90;:::i;:::-;6220:143;;;;:::o;6369:419::-;;6573:2;6562:9;6558:18;6550:26;;6622:9;6616:4;6612:20;6608:1;6597:9;6593:17;6586:47;6650:131;6776:4;6650:131;:::i;:::-;6642:139;;6540:248;;;:::o;6794:379::-;;7003:3;6992:9;6988:19;6980:27;;7017:149;7163:1;7152:9;7148:17;7139:6;7017:149;:::i;:::-;6970:203;;;;:::o;7179:169::-;;7297:6;7292:3;7285:19;7337:4;7332:3;7328:14;7313:29;;7275:73;;;;:::o;7354:96::-;;7420:24;7438:5;7420:24;:::i;:::-;7409:35;;7399:51;;;:::o;7456:90::-;;7533:5;7526:13;7519:21;7508:32;;7498:48;;;:::o;7552:126::-;;7629:42;7622:5;7618:54;7607:65;;7597:81;;;:::o;7684:91::-;;7760:8;7753:5;7749:20;7738:31;;7728:47;;;:::o;7781:77::-;;7847:5;7836:16;;7826:32;;;:::o;7864:164::-;;7966:56;8016:5;7966:56;:::i;:::-;7953:69;;7943:85;;;:::o;8034:132::-;;8136:24;8154:5;8136:24;:::i;:::-;8123:37;;8113:53;;;:::o;8172:122::-;8245:24;8263:5;8245:24;:::i;:::-;8238:5;8235:35;8225:2;;8284:1;8281;8274:12;8225:2;8215:79;:::o;8300:116::-;8370:21;8385:5;8370:21;:::i;:::-;8363:5;8360:32;8350:2;;8406:1;8403;8396:12;8350:2;8340:76;:::o;8422:122::-;8495:24;8513:5;8495:24;:::i;:::-;8488:5;8485:35;8475:2;;8534:1;8531;8524:12;8475:2;8465:79;:::o"},"methodIdentifiers":{"WETH_ADDRESS()":"040141e5","swapMultipleTokens(address,uint256,uint256,uint256,address,uint256)":"88fb531b","swapRouter()":"c31c9c07"}},"metadata":"{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMaticIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountWethIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapMultipleTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapMultipleTokens.sol\":\"SwapMultipleTokens\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"contracts/SwapMultipleTokens.sol\":{\"keccak256\":\"0x26f796beecd293412ce68d18660643bff332145927f5e2d750e1aece52b62464\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9d99f615c52dde8bb221ec3413c1d7fe00b88a036d44321afaf34116afe2642\",\"dweb:/ipfs/QmWN1cDBvi76fGGxGPaqqKbUkLxVQwx6UtMECjmVZueU2n\"]}},\"version\":1}"}}}}}