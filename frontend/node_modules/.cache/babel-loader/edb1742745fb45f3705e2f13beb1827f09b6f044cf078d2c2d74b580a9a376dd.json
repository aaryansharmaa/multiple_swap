{"ast":null,"code":"var _jsxFileName = \"/Users/aaryan/Desktop/assignment/frontend/frontend/src/Swap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport SwapMultipleTokens from \"./artifacts/contracts/SwapMultipleTokens.sol/SwapMultipleTokens.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst swapContractAddress = \"0x35523D7aC91c1290B6E7a2f35F18Ad5d1A4EF96a\";\nconst WETH_ADDRESS = \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\"; // WETH address on Polygon\nconst USDC_ADDRESS = \"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\"; // USDC address on Polygon\n\nfunction Swap() {\n  _s();\n  const [maticAmount, setMaticAmount] = useState(\"\");\n  const [wethAmount, setWethAmount] = useState(\"\");\n  const [amountOutMin, setAmountOutMin] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const handleSwap = async () => {\n    if (!window.ethereum) return alert(\"Please install MetaMask\");\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const swapContract = new ethers.Contract(swapContractAddress, SwapMultipleTokens.abi, signer);\n    const wethContract = new ethers.Contract(WETH_ADDRESS, [\"function approve(address spender, uint256 amount) public returns (bool)\"], signer);\n    try {\n      const maticValue = ethers.utils.parseEther(maticAmount); // MATIC is the native currency\n      const wethValue = ethers.utils.parseUnits(wethAmount, 18);\n      const minOut = ethers.utils.parseUnits(amountOutMin, 6); // USDC typically has 6 decimals\n      const deadline = Math.floor(Date.now() / 1000) + 900; // 15 minutes from now\n\n      // Approve WETH transfer\n      const approveTx = await wethContract.approve(swapContractAddress, wethValue);\n      await approveTx.wait();\n\n      // Swap transaction\n      const tx = await swapContract.swapMultipleTokens(USDC_ADDRESS,\n      // USDC address\n      maticValue, wethValue, minOut, recipient, deadline, {\n        value: maticValue\n      });\n      await tx.wait();\n      alert(\"Swap successful\");\n    } catch (error) {\n      console.error(\"Swap failed:\", error);\n      alert(`Swap failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Swap MATIC and WETH to USDC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"MATIC Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: maticAmount,\n        onChange: e => setMaticAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"WETH Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: wethAmount,\n        onChange: e => setWethAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Minimum USDC Amount Out:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: amountOutMin,\n        onChange: e => setAmountOutMin(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Recipient Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSwap,\n      children: \"Swap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Swap, \"ED0hVbYqX2/Klbd0Yrkb/ZFBx78=\");\n_c = Swap;\nexport default Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["React","useState","ethers","SwapMultipleTokens","jsxDEV","_jsxDEV","swapContractAddress","WETH_ADDRESS","USDC_ADDRESS","Swap","_s","maticAmount","setMaticAmount","wethAmount","setWethAmount","amountOutMin","setAmountOutMin","recipient","setRecipient","handleSwap","window","ethereum","alert","provider","providers","Web3Provider","signer","getSigner","swapContract","Contract","abi","wethContract","maticValue","utils","parseEther","wethValue","parseUnits","minOut","deadline","Math","floor","Date","now","approveTx","approve","wait","tx","swapMultipleTokens","value","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/aaryan/Desktop/assignment/frontend/frontend/src/Swap.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport SwapMultipleTokens from \"./artifacts/contracts/SwapMultipleTokens.sol/SwapMultipleTokens.json\";\n\nconst swapContractAddress = \"0x35523D7aC91c1290B6E7a2f35F18Ad5d1A4EF96a\";\nconst WETH_ADDRESS = \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\"; // WETH address on Polygon\nconst USDC_ADDRESS = \"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\"; // USDC address on Polygon\n\nfunction Swap() {\n  const [maticAmount, setMaticAmount] = useState(\"\");\n  const [wethAmount, setWethAmount] = useState(\"\");\n  const [amountOutMin, setAmountOutMin] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n\n  const handleSwap = async () => {\n    if (!window.ethereum) return alert(\"Please install MetaMask\");\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const swapContract = new ethers.Contract(\n      swapContractAddress,\n      SwapMultipleTokens.abi,\n      signer\n    );\n    const wethContract = new ethers.Contract(\n      WETH_ADDRESS,\n      [\n        \"function approve(address spender, uint256 amount) public returns (bool)\",\n      ],\n      signer\n    );\n\n    try {\n      const maticValue = ethers.utils.parseEther(maticAmount); // MATIC is the native currency\n      const wethValue = ethers.utils.parseUnits(wethAmount, 18);\n      const minOut = ethers.utils.parseUnits(amountOutMin, 6); // USDC typically has 6 decimals\n      const deadline = Math.floor(Date.now() / 1000) + 900; // 15 minutes from now\n\n      // Approve WETH transfer\n      const approveTx = await wethContract.approve(\n        swapContractAddress,\n        wethValue\n      );\n      await approveTx.wait();\n\n      // Swap transaction\n      const tx = await swapContract.swapMultipleTokens(\n        USDC_ADDRESS, // USDC address\n        maticValue,\n        wethValue,\n        minOut,\n        recipient,\n        deadline,\n        { value: maticValue }\n      );\n      await tx.wait();\n      alert(\"Swap successful\");\n    } catch (error) {\n      console.error(\"Swap failed:\", error);\n      alert(`Swap failed: ${error.message}`);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Swap MATIC and WETH to USDC</h1>\n      <div>\n        <label>MATIC Amount:</label>\n        <input\n          type=\"text\"\n          value={maticAmount}\n          onChange={(e) => setMaticAmount(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>WETH Amount:</label>\n        <input\n          type=\"text\"\n          value={wethAmount}\n          onChange={(e) => setWethAmount(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Minimum USDC Amount Out:</label>\n        <input\n          type=\"text\"\n          value={amountOutMin}\n          onChange={(e) => setAmountOutMin(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Recipient Address:</label>\n        <input\n          type=\"text\"\n          value={recipient}\n          onChange={(e) => setRecipient(e.target.value)}\n        />\n      </div>\n      <button onClick={handleSwap}>Swap</button>\n    </div>\n  );\n}\n\nexport default Swap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}