{"ast":null,"code":"var _jsxFileName = \"/Users/aaryan/Desktop/assignment/frontend/frontend/src/Swap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport SwapMultipleTokens from \"./artifacts/contracts/SwapMultipleTokens.sol/SwapMultipleTokens.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst swapContractAddress = \"0x35523D7aC91c1290B6E7a2f35F18Ad5d1A4EF96a\";\nconst WETH_ADDRESS = \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\"; // WETH address on Polygon\nconst USDC_ADDRESS = \"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\"; // USDC address on Polygon\n\nfunction Swap() {\n  _s();\n  const [maticAmount, setMaticAmount] = useState(\"\");\n  const [wethAmount, setWethAmount] = useState(\"\");\n  const [amountOutMin, setAmountOutMin] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  useEffect(() => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n    }\n  }, []);\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"Please install MetaMask\");\n    try {\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n      const signer = provider.getSigner();\n      setSigner(signer);\n    } catch (error) {\n      console.error(\"Failed to connect wallet:\", error);\n    }\n  };\n  const handleSwap = async () => {\n    if (!signer) return alert(\"Please connect your wallet first\");\n    const swapContract = new ethers.Contract(swapContractAddress, SwapMultipleTokens.abi, signer);\n    const wethContract = new ethers.Contract(WETH_ADDRESS, [\"function approve(address spender, uint256 amount) public returns (bool)\"], signer);\n    try {\n      const maticValue = ethers.utils.parseEther(maticAmount); // MATIC is the native currency\n      const wethValue = ethers.utils.parseUnits(wethAmount, 18);\n      const minOut = ethers.utils.parseUnits(amountOutMin, 6); // USDC typically has 6 decimals\n      const deadline = Math.floor(Date.now() / 1000) + 900; // 15 minutes from now\n\n      // Log Balances\n      const maticBalance = await provider.getBalance(account);\n      console.log(\"MATIC Balance:\", ethers.utils.formatEther(maticBalance));\n      const wethBalance = await wethContract.balanceOf(account);\n      console.log(\"WETH Balance:\", ethers.utils.formatUnits(wethBalance, 18));\n\n      // Log Approval Status\n      const allowance = await wethContract.allowance(account, swapContractAddress);\n      console.log(\"WETH Allowance:\", ethers.utils.formatUnits(allowance, 18));\n\n      // Approve WETH transfer if needed\n      if (allowance.lt(wethValue)) {\n        console.log(\"Approving WETH transfer...\");\n        const approveTx = await wethContract.approve(swapContractAddress, wethValue);\n        await approveTx.wait();\n        console.log(\"WETH Approved\");\n      } else {\n        console.log(\"WETH transfer already approved\");\n      }\n\n      // Swap transaction\n      console.log(\"Initiating swap...\");\n      const tx = await swapContract.swapMultipleTokens(USDC_ADDRESS,\n      // USDC address\n      maticValue, wethValue, minOut, recipient, deadline, {\n        value: maticValue\n      });\n      await tx.wait();\n      alert(\"Swap successful\");\n    } catch (error) {\n      console.error(\"Swap failed:\", error);\n      alert(`Swap failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Swap MATIC and WETH to USDC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: account ? `Connected: ${account}` : \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"MATIC Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: maticAmount,\n        onChange: e => setMaticAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"WETH Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: wethAmount,\n        onChange: e => setWethAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Minimum USDC Amount Out:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: amountOutMin,\n        onChange: e => setAmountOutMin(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Recipient Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSwap,\n      children: \"Swap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Swap, \"YXOxDUgzH0DcPcE+rD2cuJJ4JPk=\");\n_c = Swap;\nexport default Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["React","useState","useEffect","ethers","SwapMultipleTokens","jsxDEV","_jsxDEV","swapContractAddress","WETH_ADDRESS","USDC_ADDRESS","Swap","_s","maticAmount","setMaticAmount","wethAmount","setWethAmount","amountOutMin","setAmountOutMin","recipient","setRecipient","account","setAccount","provider","setProvider","signer","setSigner","window","ethereum","providers","Web3Provider","connectWallet","alert","accounts","send","getSigner","error","console","handleSwap","swapContract","Contract","abi","wethContract","maticValue","utils","parseEther","wethValue","parseUnits","minOut","deadline","Math","floor","Date","now","maticBalance","getBalance","log","formatEther","wethBalance","balanceOf","formatUnits","allowance","lt","approveTx","approve","wait","tx","swapMultipleTokens","value","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/aaryan/Desktop/assignment/frontend/frontend/src/Swap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport SwapMultipleTokens from \"./artifacts/contracts/SwapMultipleTokens.sol/SwapMultipleTokens.json\";\n\nconst swapContractAddress = \"0x35523D7aC91c1290B6E7a2f35F18Ad5d1A4EF96a\";\nconst WETH_ADDRESS = \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\"; // WETH address on Polygon\nconst USDC_ADDRESS = \"0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174\"; // USDC address on Polygon\n\nfunction Swap() {\n  const [maticAmount, setMaticAmount] = useState(\"\");\n  const [wethAmount, setWethAmount] = useState(\"\");\n  const [amountOutMin, setAmountOutMin] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n    }\n  }, []);\n\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"Please install MetaMask\");\n    try {\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n      const signer = provider.getSigner();\n      setSigner(signer);\n    } catch (error) {\n      console.error(\"Failed to connect wallet:\", error);\n    }\n  };\n\n  const handleSwap = async () => {\n    if (!signer) return alert(\"Please connect your wallet first\");\n\n    const swapContract = new ethers.Contract(\n      swapContractAddress,\n      SwapMultipleTokens.abi,\n      signer\n    );\n    const wethContract = new ethers.Contract(\n      WETH_ADDRESS,\n      [\n        \"function approve(address spender, uint256 amount) public returns (bool)\",\n      ],\n      signer\n    );\n\n    try {\n      const maticValue = ethers.utils.parseEther(maticAmount); // MATIC is the native currency\n      const wethValue = ethers.utils.parseUnits(wethAmount, 18);\n      const minOut = ethers.utils.parseUnits(amountOutMin, 6); // USDC typically has 6 decimals\n      const deadline = Math.floor(Date.now() / 1000) + 900; // 15 minutes from now\n\n      // Log Balances\n      const maticBalance = await provider.getBalance(account);\n      console.log(\"MATIC Balance:\", ethers.utils.formatEther(maticBalance));\n\n      const wethBalance = await wethContract.balanceOf(account);\n      console.log(\"WETH Balance:\", ethers.utils.formatUnits(wethBalance, 18));\n\n      // Log Approval Status\n      const allowance = await wethContract.allowance(\n        account,\n        swapContractAddress\n      );\n      console.log(\"WETH Allowance:\", ethers.utils.formatUnits(allowance, 18));\n\n      // Approve WETH transfer if needed\n      if (allowance.lt(wethValue)) {\n        console.log(\"Approving WETH transfer...\");\n        const approveTx = await wethContract.approve(\n          swapContractAddress,\n          wethValue\n        );\n        await approveTx.wait();\n        console.log(\"WETH Approved\");\n      } else {\n        console.log(\"WETH transfer already approved\");\n      }\n\n      // Swap transaction\n      console.log(\"Initiating swap...\");\n      const tx = await swapContract.swapMultipleTokens(\n        USDC_ADDRESS, // USDC address\n        maticValue,\n        wethValue,\n        minOut,\n        recipient,\n        deadline,\n        { value: maticValue }\n      );\n      await tx.wait();\n      alert(\"Swap successful\");\n    } catch (error) {\n      console.error(\"Swap failed:\", error);\n      alert(`Swap failed: ${error.message}`);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Swap MATIC and WETH to USDC</h1>\n      <button onClick={connectWallet}>\n        {account ? `Connected: ${account}` : \"Connect Wallet\"}\n      </button>\n      <div>\n        <label>MATIC Amount:</label>\n        <input\n          type=\"text\"\n          value={maticAmount}\n          onChange={(e) => setMaticAmount(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>WETH Amount:</label>\n        <input\n          type=\"text\"\n          value={wethAmount}\n          onChange={(e) => setWethAmount(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Minimum USDC Amount Out:</label>\n        <input\n          type=\"text\"\n          value={amountOutMin}\n          onChange={(e) => setAmountOutMin(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Recipient Address:</label>\n        <input\n          type=\"text\"\n          value={recipient}\n          onChange={(e) => setRecipient(e.target.value)}\n        />\n      </div>\n      <button onClick={handleSwap}>Swap</button>\n    </div>\n  );\n}\n\nexport default Swap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,kBAAkB,MAAM,sEAAsE;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtG,MAAMC,mBAAmB,GAAG,4CAA4C;AACxE,MAAMC,YAAY,GAAG,4CAA4C,CAAC,CAAC;AACnE,MAAMC,YAAY,GAAG,4CAA4C,CAAC,CAAC;;AAEnE,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,IAAIwB,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAML,QAAQ,GAAG,IAAInB,MAAM,CAACyB,SAAS,CAACC,YAAY,CAACH,MAAM,CAACC,QAAQ,CAAC;MACnEJ,WAAW,CAACD,QAAQ,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACJ,MAAM,CAACC,QAAQ,EAAE,OAAOI,KAAK,CAAC,yBAAyB,CAAC;IAC7D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC/DZ,UAAU,CAACW,QAAQ,CAAC,CAAC,CAAC,CAAC;MACvB,MAAMR,MAAM,GAAGF,QAAQ,CAACY,SAAS,CAAC,CAAC;MACnCT,SAAS,CAACD,MAAM,CAAC;IACnB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACb,MAAM,EAAE,OAAOO,KAAK,CAAC,kCAAkC,CAAC;IAE7D,MAAMO,YAAY,GAAG,IAAInC,MAAM,CAACoC,QAAQ,CACtChC,mBAAmB,EACnBH,kBAAkB,CAACoC,GAAG,EACtBhB,MACF,CAAC;IACD,MAAMiB,YAAY,GAAG,IAAItC,MAAM,CAACoC,QAAQ,CACtC/B,YAAY,EACZ,CACE,yEAAyE,CAC1E,EACDgB,MACF,CAAC;IAED,IAAI;MACF,MAAMkB,UAAU,GAAGvC,MAAM,CAACwC,KAAK,CAACC,UAAU,CAAChC,WAAW,CAAC,CAAC,CAAC;MACzD,MAAMiC,SAAS,GAAG1C,MAAM,CAACwC,KAAK,CAACG,UAAU,CAAChC,UAAU,EAAE,EAAE,CAAC;MACzD,MAAMiC,MAAM,GAAG5C,MAAM,CAACwC,KAAK,CAACG,UAAU,CAAC9B,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;MACzD,MAAMgC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;;MAEtD;MACA,MAAMC,YAAY,GAAG,MAAM/B,QAAQ,CAACgC,UAAU,CAAClC,OAAO,CAAC;MACvDgB,OAAO,CAACmB,GAAG,CAAC,gBAAgB,EAAEpD,MAAM,CAACwC,KAAK,CAACa,WAAW,CAACH,YAAY,CAAC,CAAC;MAErE,MAAMI,WAAW,GAAG,MAAMhB,YAAY,CAACiB,SAAS,CAACtC,OAAO,CAAC;MACzDgB,OAAO,CAACmB,GAAG,CAAC,eAAe,EAAEpD,MAAM,CAACwC,KAAK,CAACgB,WAAW,CAACF,WAAW,EAAE,EAAE,CAAC,CAAC;;MAEvE;MACA,MAAMG,SAAS,GAAG,MAAMnB,YAAY,CAACmB,SAAS,CAC5CxC,OAAO,EACPb,mBACF,CAAC;MACD6B,OAAO,CAACmB,GAAG,CAAC,iBAAiB,EAAEpD,MAAM,CAACwC,KAAK,CAACgB,WAAW,CAACC,SAAS,EAAE,EAAE,CAAC,CAAC;;MAEvE;MACA,IAAIA,SAAS,CAACC,EAAE,CAAChB,SAAS,CAAC,EAAE;QAC3BT,OAAO,CAACmB,GAAG,CAAC,4BAA4B,CAAC;QACzC,MAAMO,SAAS,GAAG,MAAMrB,YAAY,CAACsB,OAAO,CAC1CxD,mBAAmB,EACnBsC,SACF,CAAC;QACD,MAAMiB,SAAS,CAACE,IAAI,CAAC,CAAC;QACtB5B,OAAO,CAACmB,GAAG,CAAC,eAAe,CAAC;MAC9B,CAAC,MAAM;QACLnB,OAAO,CAACmB,GAAG,CAAC,gCAAgC,CAAC;MAC/C;;MAEA;MACAnB,OAAO,CAACmB,GAAG,CAAC,oBAAoB,CAAC;MACjC,MAAMU,EAAE,GAAG,MAAM3B,YAAY,CAAC4B,kBAAkB,CAC9CzD,YAAY;MAAE;MACdiC,UAAU,EACVG,SAAS,EACTE,MAAM,EACN7B,SAAS,EACT8B,QAAQ,EACR;QAAEmB,KAAK,EAAEzB;MAAW,CACtB,CAAC;MACD,MAAMuB,EAAE,CAACD,IAAI,CAAC,CAAC;MACfjC,KAAK,CAAC,iBAAiB,CAAC;IAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCJ,KAAK,CAAC,gBAAgBI,KAAK,CAACiC,OAAO,EAAE,CAAC;IACxC;EACF,CAAC;EAED,oBACE9D,OAAA;IAAA+D,QAAA,gBACE/D,OAAA;MAAA+D,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCnE,OAAA;MAAQoE,OAAO,EAAE5C,aAAc;MAAAuC,QAAA,EAC5BjD,OAAO,GAAG,cAAcA,OAAO,EAAE,GAAG;IAAgB;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACTnE,OAAA;MAAA+D,QAAA,gBACE/D,OAAA;QAAA+D,QAAA,EAAO;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5BnE,OAAA;QACEqE,IAAI,EAAC,MAAM;QACXR,KAAK,EAAEvD,WAAY;QACnBgE,QAAQ,EAAGC,CAAC,IAAKhE,cAAc,CAACgE,CAAC,CAACC,MAAM,CAACX,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnE,OAAA;MAAA+D,QAAA,gBACE/D,OAAA;QAAA+D,QAAA,EAAO;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3BnE,OAAA;QACEqE,IAAI,EAAC,MAAM;QACXR,KAAK,EAAErD,UAAW;QAClB8D,QAAQ,EAAGC,CAAC,IAAK9D,aAAa,CAAC8D,CAAC,CAACC,MAAM,CAACX,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnE,OAAA;MAAA+D,QAAA,gBACE/D,OAAA;QAAA+D,QAAA,EAAO;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvCnE,OAAA;QACEqE,IAAI,EAAC,MAAM;QACXR,KAAK,EAAEnD,YAAa;QACpB4D,QAAQ,EAAGC,CAAC,IAAK5D,eAAe,CAAC4D,CAAC,CAACC,MAAM,CAACX,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnE,OAAA;MAAA+D,QAAA,gBACE/D,OAAA;QAAA+D,QAAA,EAAO;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjCnE,OAAA;QACEqE,IAAI,EAAC,MAAM;QACXR,KAAK,EAAEjD,SAAU;QACjB0D,QAAQ,EAAGC,CAAC,IAAK1D,YAAY,CAAC0D,CAAC,CAACC,MAAM,CAACX,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnE,OAAA;MAAQoE,OAAO,EAAErC,UAAW;MAAAgC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAAC9D,EAAA,CAzIQD,IAAI;AAAAqE,EAAA,GAAJrE,IAAI;AA2Ib,eAAeA,IAAI;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}