{"ast":null,"code":"var _jsxFileName = \"/Users/aaryan/Desktop/swap_multiple/frontend/src/Swap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport SwapMultipleTokens from \"./artifacts/contracts/SwapMultipleTokens.sol/SwapMultipleTokens.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst swapContractAddress = \"0xE8f7BE4E0BDC5503FA590edf5551C8b2E6928041\"; // Use the new deployed contract address\nconst WETH_ADDRESS = \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\"; // WETH address on Polygon\n\nconst ERC20_ABI = [\"function balanceOf(address owner) view returns (uint256)\", \"function allowance(address owner, address spender) view returns (uint256)\", \"function approve(address spender, uint256 amount) public returns (bool)\"];\nfunction Swap() {\n  _s();\n  const [maticAmount, setMaticAmount] = useState(\"1\");\n  const [wethAmount, setWethAmount] = useState(\"0.0005\");\n  const [amountOutMin, setAmountOutMin] = useState(\"1\");\n  const [recipient, setRecipient] = useState(\"Your address\");\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [transactionDetails, setTransactionDetails] = useState(null);\n  useEffect(() => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n    }\n  }, []);\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"Please install MetaMask\");\n    try {\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n      const signer = provider.getSigner();\n      setSigner(signer);\n    } catch (error) {\n      console.error(\"Failed to connect wallet:\", error);\n    }\n  };\n  const handleSwap = async () => {\n    if (!signer) return alert(\"Please connect your wallet first\");\n    const swapContract = new ethers.Contract(swapContractAddress, SwapMultipleTokens.abi, signer);\n    const wethContract = new ethers.Contract(WETH_ADDRESS, ERC20_ABI, signer);\n    try {\n      const maticValue = ethers.utils.parseEther(maticAmount); // MATIC is the native currency\n      const wethValue = ethers.utils.parseUnits(wethAmount, 18);\n      const minOut = ethers.utils.parseUnits(amountOutMin, 6); // USDC typically has 6 decimals\n      const deadline = Math.floor(Date.now() / 1000) + 900; // 15 minutes from now\n\n      // Log Balances\n      const maticBalance = await provider.getBalance(account);\n      console.log(\"MATIC Balance:\", ethers.utils.formatEther(maticBalance));\n      const wethBalance = await wethContract.balanceOf(account);\n      console.log(\"WETH Balance:\", ethers.utils.formatUnits(wethBalance, 18));\n\n      // Ensure sufficient balance\n      if (ethers.utils.parseUnits(wethAmount, 18).gt(wethBalance)) {\n        alert(\"Insufficient WETH balance\");\n        return;\n      }\n\n      // Log Approval Status\n      const allowance = await wethContract.allowance(account, swapContractAddress);\n      console.log(\"WETH Allowance:\", ethers.utils.formatUnits(allowance, 18));\n\n      // Approve WETH transfer if needed\n      if (allowance.lt(wethValue)) {\n        console.log(\"Approving WETH transfer...\");\n        const approveTx = await wethContract.approve(swapContractAddress, wethValue);\n        await approveTx.wait();\n        console.log(\"WETH Approved\");\n      } else {\n        console.log(\"WETH transfer already approved\");\n      }\n\n      // Display transaction details to the user\n      setTransactionDetails({\n        maticValue: ethers.utils.formatEther(maticValue),\n        wethValue: ethers.utils.formatUnits(wethValue, 18),\n        minOut,\n        recipient\n      });\n\n      // Execute the swap\n      console.log(\"Executing swap...\");\n      const tx = await swapContract.swapMaticAndWethForUsdc(maticValue, wethValue, minOut, recipient, deadline, {\n        value: maticValue,\n        gasLimit: ethers.utils.hexlify(500000)\n      });\n      await tx.wait();\n      alert(\"Swap successful\");\n    } catch (error) {\n      console.error(\"Swap failed:\", error);\n      if (error.data && error.data.message) {\n        alert(`Swap failed: ${error.data.message}`);\n      } else {\n        alert(`Swap failed: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Swap MATIC and ETH to USDC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        className: \"button\",\n        children: account ? `Connected: ${account}` : \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"MATIC Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: maticAmount,\n          onChange: e => setMaticAmount(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"ETH Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: wethAmount,\n          onChange: e => setWethAmount(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Minimum USDC Amount Out:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: amountOutMin,\n          onChange: e => setAmountOutMin(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipient Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: recipient,\n          onChange: e => setRecipient(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSwap,\n        className: \"button\",\n        children: \"Swap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), transactionDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transactionDetails\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Transaction Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"MATIC Amount: \", transactionDetails.maticValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"WETH Amount: \", transactionDetails.wethValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Minimum USDC Amount Out: \", amountOutMin]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Recipient: \", transactionDetails.recipient]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(Swap, \"tBPRG2oehC8BGJqFBaCNMDBNI7Q=\");\n_c = Swap;\nexport default Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["React","useState","useEffect","ethers","SwapMultipleTokens","jsxDEV","_jsxDEV","swapContractAddress","WETH_ADDRESS","ERC20_ABI","Swap","_s","maticAmount","setMaticAmount","wethAmount","setWethAmount","amountOutMin","setAmountOutMin","recipient","setRecipient","account","setAccount","provider","setProvider","signer","setSigner","transactionDetails","setTransactionDetails","window","ethereum","providers","Web3Provider","connectWallet","alert","accounts","send","getSigner","error","console","handleSwap","swapContract","Contract","abi","wethContract","maticValue","utils","parseEther","wethValue","parseUnits","minOut","deadline","Math","floor","Date","now","maticBalance","getBalance","log","formatEther","wethBalance","balanceOf","formatUnits","gt","allowance","lt","approveTx","approve","wait","tx","swapMaticAndWethForUsdc","value","gasLimit","hexlify","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/aaryan/Desktop/swap_multiple/frontend/src/Swap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport \"./App.css\";\nimport SwapMultipleTokens from \"./artifacts/contracts/SwapMultipleTokens.sol/SwapMultipleTokens.json\";\n\nconst swapContractAddress = \"0xE8f7BE4E0BDC5503FA590edf5551C8b2E6928041\"; // Use the new deployed contract address\nconst WETH_ADDRESS = \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\"; // WETH address on Polygon\n\nconst ERC20_ABI = [\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function allowance(address owner, address spender) view returns (uint256)\",\n  \"function approve(address spender, uint256 amount) public returns (bool)\",\n];\n\nfunction Swap() {\n  const [maticAmount, setMaticAmount] = useState(\"1\");\n  const [wethAmount, setWethAmount] = useState(\"0.0005\");\n  const [amountOutMin, setAmountOutMin] = useState(\"1\");\n  const [recipient, setRecipient] = useState(\"Your address\");\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [transactionDetails, setTransactionDetails] = useState(null);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n    }\n  }, []);\n\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"Please install MetaMask\");\n    try {\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n      const signer = provider.getSigner();\n      setSigner(signer);\n    } catch (error) {\n      console.error(\"Failed to connect wallet:\", error);\n    }\n  };\n\n  const handleSwap = async () => {\n    if (!signer) return alert(\"Please connect your wallet first\");\n\n    const swapContract = new ethers.Contract(\n      swapContractAddress,\n      SwapMultipleTokens.abi,\n      signer\n    );\n    const wethContract = new ethers.Contract(WETH_ADDRESS, ERC20_ABI, signer);\n\n    try {\n      const maticValue = ethers.utils.parseEther(maticAmount); // MATIC is the native currency\n      const wethValue = ethers.utils.parseUnits(wethAmount, 18);\n      const minOut = ethers.utils.parseUnits(amountOutMin, 6); // USDC typically has 6 decimals\n      const deadline = Math.floor(Date.now() / 1000) + 900; // 15 minutes from now\n\n      // Log Balances\n      const maticBalance = await provider.getBalance(account);\n      console.log(\"MATIC Balance:\", ethers.utils.formatEther(maticBalance));\n\n      const wethBalance = await wethContract.balanceOf(account);\n      console.log(\"WETH Balance:\", ethers.utils.formatUnits(wethBalance, 18));\n\n      // Ensure sufficient balance\n      if (ethers.utils.parseUnits(wethAmount, 18).gt(wethBalance)) {\n        alert(\"Insufficient WETH balance\");\n        return;\n      }\n\n      // Log Approval Status\n      const allowance = await wethContract.allowance(\n        account,\n        swapContractAddress\n      );\n      console.log(\"WETH Allowance:\", ethers.utils.formatUnits(allowance, 18));\n\n      // Approve WETH transfer if needed\n      if (allowance.lt(wethValue)) {\n        console.log(\"Approving WETH transfer...\");\n        const approveTx = await wethContract.approve(\n          swapContractAddress,\n          wethValue\n        );\n        await approveTx.wait();\n        console.log(\"WETH Approved\");\n      } else {\n        console.log(\"WETH transfer already approved\");\n      }\n\n      // Display transaction details to the user\n      setTransactionDetails({\n        maticValue: ethers.utils.formatEther(maticValue),\n        wethValue: ethers.utils.formatUnits(wethValue, 18),\n        minOut,\n        recipient,\n      });\n\n      // Execute the swap\n      console.log(\"Executing swap...\");\n      const tx = await swapContract.swapMaticAndWethForUsdc(\n        maticValue,\n        wethValue,\n        minOut,\n        recipient,\n        deadline,\n        {\n          value: maticValue,\n          gasLimit: ethers.utils.hexlify(500000),\n        }\n      );\n      await tx.wait();\n      alert(\"Swap successful\");\n    } catch (error) {\n      console.error(\"Swap failed:\", error);\n      if (error.data && error.data.message) {\n        alert(`Swap failed: ${error.data.message}`);\n      } else {\n        alert(`Swap failed: ${error.message}`);\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <h1>Swap MATIC and ETH to USDC</h1>\n        <button onClick={connectWallet} className=\"button\">\n          {account ? `Connected: ${account}` : \"Connect Wallet\"}\n        </button>\n        <div className=\"inputGroup\">\n          <label>MATIC Amount:</label>\n          <input\n            type=\"text\"\n            value={maticAmount}\n            onChange={(e) => setMaticAmount(e.target.value)}\n            className=\"input\"\n          />\n        </div>\n        <div className=\"inputGroup\">\n          <label>ETH Amount:</label>\n          <input\n            type=\"text\"\n            value={wethAmount}\n            onChange={(e) => setWethAmount(e.target.value)}\n            className=\"input\"\n          />\n        </div>\n        <div className=\"inputGroup\">\n          <label>Minimum USDC Amount Out:</label>\n          <input\n            type=\"text\"\n            value={amountOutMin}\n            onChange={(e) => setAmountOutMin(e.target.value)}\n            className=\"input\"\n          />\n        </div>\n        <div className=\"inputGroup\">\n          <label>Recipient Address:</label>\n          <input\n            type=\"text\"\n            value={recipient}\n            onChange={(e) => setRecipient(e.target.value)}\n            className=\"input\"\n          />\n        </div>\n        <button onClick={handleSwap} className=\"button\">\n          Swap\n        </button>\n        {transactionDetails && (\n          <div className=\"transactionDetails\">\n            <h3>Transaction Details</h3>\n            <p>MATIC Amount: {transactionDetails.maticValue}</p>\n            <p>WETH Amount: {transactionDetails.wethValue}</p>\n            <p>Minimum USDC Amount Out: {amountOutMin}</p>\n            <p>Recipient: {transactionDetails.recipient}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Swap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,WAAW;AAClB,OAAOC,kBAAkB,MAAM,sEAAsE;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtG,MAAMC,mBAAmB,GAAG,4CAA4C,CAAC,CAAC;AAC1E,MAAMC,YAAY,GAAG,4CAA4C,CAAC,CAAC;;AAEnE,MAAMC,SAAS,GAAG,CAChB,0DAA0D,EAC1D,2EAA2E,EAC3E,yEAAyE,CAC1E;AAED,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EACnD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,QAAQ,CAAC;EACtD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,GAAG,CAAC;EACrD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,cAAc,CAAC;EAC1D,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACyB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAElEC,SAAS,CAAC,MAAM;IACd,IAAI0B,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAMP,QAAQ,GAAG,IAAInB,MAAM,CAAC2B,SAAS,CAACC,YAAY,CAACH,MAAM,CAACC,QAAQ,CAAC;MACnEN,WAAW,CAACD,QAAQ,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACJ,MAAM,CAACC,QAAQ,EAAE,OAAOI,KAAK,CAAC,yBAAyB,CAAC;IAC7D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC/Dd,UAAU,CAACa,QAAQ,CAAC,CAAC,CAAC,CAAC;MACvB,MAAMV,MAAM,GAAGF,QAAQ,CAACc,SAAS,CAAC,CAAC;MACnCX,SAAS,CAACD,MAAM,CAAC;IACnB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACf,MAAM,EAAE,OAAOS,KAAK,CAAC,kCAAkC,CAAC;IAE7D,MAAMO,YAAY,GAAG,IAAIrC,MAAM,CAACsC,QAAQ,CACtClC,mBAAmB,EACnBH,kBAAkB,CAACsC,GAAG,EACtBlB,MACF,CAAC;IACD,MAAMmB,YAAY,GAAG,IAAIxC,MAAM,CAACsC,QAAQ,CAACjC,YAAY,EAAEC,SAAS,EAAEe,MAAM,CAAC;IAEzE,IAAI;MACF,MAAMoB,UAAU,GAAGzC,MAAM,CAAC0C,KAAK,CAACC,UAAU,CAAClC,WAAW,CAAC,CAAC,CAAC;MACzD,MAAMmC,SAAS,GAAG5C,MAAM,CAAC0C,KAAK,CAACG,UAAU,CAAClC,UAAU,EAAE,EAAE,CAAC;MACzD,MAAMmC,MAAM,GAAG9C,MAAM,CAAC0C,KAAK,CAACG,UAAU,CAAChC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;MACzD,MAAMkC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;;MAEtD;MACA,MAAMC,YAAY,GAAG,MAAMjC,QAAQ,CAACkC,UAAU,CAACpC,OAAO,CAAC;MACvDkB,OAAO,CAACmB,GAAG,CAAC,gBAAgB,EAAEtD,MAAM,CAAC0C,KAAK,CAACa,WAAW,CAACH,YAAY,CAAC,CAAC;MAErE,MAAMI,WAAW,GAAG,MAAMhB,YAAY,CAACiB,SAAS,CAACxC,OAAO,CAAC;MACzDkB,OAAO,CAACmB,GAAG,CAAC,eAAe,EAAEtD,MAAM,CAAC0C,KAAK,CAACgB,WAAW,CAACF,WAAW,EAAE,EAAE,CAAC,CAAC;;MAEvE;MACA,IAAIxD,MAAM,CAAC0C,KAAK,CAACG,UAAU,CAAClC,UAAU,EAAE,EAAE,CAAC,CAACgD,EAAE,CAACH,WAAW,CAAC,EAAE;QAC3D1B,KAAK,CAAC,2BAA2B,CAAC;QAClC;MACF;;MAEA;MACA,MAAM8B,SAAS,GAAG,MAAMpB,YAAY,CAACoB,SAAS,CAC5C3C,OAAO,EACPb,mBACF,CAAC;MACD+B,OAAO,CAACmB,GAAG,CAAC,iBAAiB,EAAEtD,MAAM,CAAC0C,KAAK,CAACgB,WAAW,CAACE,SAAS,EAAE,EAAE,CAAC,CAAC;;MAEvE;MACA,IAAIA,SAAS,CAACC,EAAE,CAACjB,SAAS,CAAC,EAAE;QAC3BT,OAAO,CAACmB,GAAG,CAAC,4BAA4B,CAAC;QACzC,MAAMQ,SAAS,GAAG,MAAMtB,YAAY,CAACuB,OAAO,CAC1C3D,mBAAmB,EACnBwC,SACF,CAAC;QACD,MAAMkB,SAAS,CAACE,IAAI,CAAC,CAAC;QACtB7B,OAAO,CAACmB,GAAG,CAAC,eAAe,CAAC;MAC9B,CAAC,MAAM;QACLnB,OAAO,CAACmB,GAAG,CAAC,gCAAgC,CAAC;MAC/C;;MAEA;MACA9B,qBAAqB,CAAC;QACpBiB,UAAU,EAAEzC,MAAM,CAAC0C,KAAK,CAACa,WAAW,CAACd,UAAU,CAAC;QAChDG,SAAS,EAAE5C,MAAM,CAAC0C,KAAK,CAACgB,WAAW,CAACd,SAAS,EAAE,EAAE,CAAC;QAClDE,MAAM;QACN/B;MACF,CAAC,CAAC;;MAEF;MACAoB,OAAO,CAACmB,GAAG,CAAC,mBAAmB,CAAC;MAChC,MAAMW,EAAE,GAAG,MAAM5B,YAAY,CAAC6B,uBAAuB,CACnDzB,UAAU,EACVG,SAAS,EACTE,MAAM,EACN/B,SAAS,EACTgC,QAAQ,EACR;QACEoB,KAAK,EAAE1B,UAAU;QACjB2B,QAAQ,EAAEpE,MAAM,CAAC0C,KAAK,CAAC2B,OAAO,CAAC,MAAM;MACvC,CACF,CAAC;MACD,MAAMJ,EAAE,CAACD,IAAI,CAAC,CAAC;MACflC,KAAK,CAAC,iBAAiB,CAAC;IAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,IAAIA,KAAK,CAACoC,IAAI,IAAIpC,KAAK,CAACoC,IAAI,CAACC,OAAO,EAAE;QACpCzC,KAAK,CAAC,gBAAgBI,KAAK,CAACoC,IAAI,CAACC,OAAO,EAAE,CAAC;MAC7C,CAAC,MAAM;QACLzC,KAAK,CAAC,gBAAgBI,KAAK,CAACqC,OAAO,EAAE,CAAC;MACxC;IACF;EACF,CAAC;EAED,oBACEpE,OAAA;IAAKqE,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBtE,OAAA;MAAKqE,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBtE,OAAA;QAAAsE,QAAA,EAAI;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC1E,OAAA;QAAQ2E,OAAO,EAAEjD,aAAc;QAAC2C,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAC/CxD,OAAO,GAAG,cAAcA,OAAO,EAAE,GAAG;MAAgB;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACT1E,OAAA;QAAKqE,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBtE,OAAA;UAAAsE,QAAA,EAAO;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5B1E,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXZ,KAAK,EAAE1D,WAAY;UACnBuE,QAAQ,EAAGC,CAAC,IAAKvE,cAAc,CAACuE,CAAC,CAACC,MAAM,CAACf,KAAK,CAAE;UAChDK,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1E,OAAA;QAAKqE,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBtE,OAAA;UAAAsE,QAAA,EAAO;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1B1E,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXZ,KAAK,EAAExD,UAAW;UAClBqE,QAAQ,EAAGC,CAAC,IAAKrE,aAAa,CAACqE,CAAC,CAACC,MAAM,CAACf,KAAK,CAAE;UAC/CK,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1E,OAAA;QAAKqE,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBtE,OAAA;UAAAsE,QAAA,EAAO;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvC1E,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXZ,KAAK,EAAEtD,YAAa;UACpBmE,QAAQ,EAAGC,CAAC,IAAKnE,eAAe,CAACmE,CAAC,CAACC,MAAM,CAACf,KAAK,CAAE;UACjDK,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1E,OAAA;QAAKqE,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBtE,OAAA;UAAAsE,QAAA,EAAO;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACjC1E,OAAA;UACE4E,IAAI,EAAC,MAAM;UACXZ,KAAK,EAAEpD,SAAU;UACjBiE,QAAQ,EAAGC,CAAC,IAAKjE,YAAY,CAACiE,CAAC,CAACC,MAAM,CAACf,KAAK,CAAE;UAC9CK,SAAS,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1E,OAAA;QAAQ2E,OAAO,EAAE1C,UAAW;QAACoC,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAEhD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRtD,kBAAkB,iBACjBpB,OAAA;QAAKqE,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCtE,OAAA;UAAAsE,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5B1E,OAAA;UAAAsE,QAAA,GAAG,gBAAc,EAAClD,kBAAkB,CAACkB,UAAU;QAAA;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpD1E,OAAA;UAAAsE,QAAA,GAAG,eAAa,EAAClD,kBAAkB,CAACqB,SAAS;QAAA;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClD1E,OAAA;UAAAsE,QAAA,GAAG,2BAAyB,EAAC5D,YAAY;QAAA;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9C1E,OAAA;UAAAsE,QAAA,GAAG,aAAW,EAAClD,kBAAkB,CAACR,SAAS;QAAA;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrE,EAAA,CAzKQD,IAAI;AAAA4E,EAAA,GAAJ5E,IAAI;AA2Kb,eAAeA,IAAI;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}