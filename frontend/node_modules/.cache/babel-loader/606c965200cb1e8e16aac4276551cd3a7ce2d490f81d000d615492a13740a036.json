{"ast":null,"code":"var _jsxFileName = \"/Users/aaryan/Desktop/assignment/frontend/frontend/src/Swap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport SwapMultipleTokens from \"./artifacts/contracts/SwapMultipleTokens.sol/SwapMultipleTokens.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst swapContractAddress = \"0x17D41BF00f991Ee300DD7c85727C014026B94B52\"; // Replace with the deployed contract address\nconst WETH_ADDRESS = \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\"; // WETH address on Polygon\n\nconst ERC20_ABI = [\"function balanceOf(address owner) view returns (uint256)\", \"function allowance(address owner, address spender) view returns (uint256)\", \"function approve(address spender, uint256 amount) public returns (bool)\"];\nfunction Swap() {\n  _s();\n  const [maticAmount, setMaticAmount] = useState(\"\");\n  const [wethAmount, setWethAmount] = useState(\"\");\n  const [amountOutMin, setAmountOutMin] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  useEffect(() => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n    }\n  }, []);\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"Please install MetaMask\");\n    try {\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n      const signer = provider.getSigner();\n      setSigner(signer);\n    } catch (error) {\n      console.error(\"Failed to connect wallet:\", error);\n    }\n  };\n  const handleSwap = async () => {\n    if (!signer) return alert(\"Please connect your wallet first\");\n    const swapContract = new ethers.Contract(swapContractAddress, SwapMultipleTokens.abi, signer);\n    const wethContract = new ethers.Contract(WETH_ADDRESS, ERC20_ABI, signer);\n    try {\n      const maticValue = ethers.utils.parseEther(maticAmount); // MATIC is the native currency\n      const wethValue = ethers.utils.parseUnits(wethAmount, 18);\n      const minOut = ethers.utils.parseUnits(amountOutMin, 6); // USDC typically has 6 decimals\n      const deadline = Math.floor(Date.now() / 1000) + 900; // 15 minutes from now\n\n      // Log Balances\n      const maticBalance = await provider.getBalance(account);\n      console.log(\"MATIC Balance:\", ethers.utils.formatEther(maticBalance));\n      const wethBalance = await wethContract.balanceOf(account);\n      console.log(\"WETH Balance:\", ethers.utils.formatUnits(wethBalance, 18));\n\n      // Ensure sufficient balance\n      if (ethers.utils.parseUnits(wethAmount, 18).gt(wethBalance)) {\n        alert(\"Insufficient WETH balance\");\n        return;\n      }\n\n      // Log Approval Status\n      const allowance = await wethContract.allowance(account, swapContractAddress);\n      console.log(\"WETH Allowance:\", ethers.utils.formatUnits(allowance, 18));\n\n      // Approve WETH transfer if needed\n      if (allowance.lt(wethValue)) {\n        console.log(\"Approving WETH transfer...\");\n        const approveTx = await wethContract.approve(swapContractAddress, wethValue);\n        await approveTx.wait();\n        console.log(\"WETH Approved\");\n      } else {\n        console.log(\"WETH transfer already approved\");\n      }\n\n      // Prepare multicall data\n      const multicallData = swapContract.interface.encodeFunctionData(\"swapMaticAndWethForUsdc\", [maticValue, wethValue, minOut, recipient, deadline]);\n\n      // Execute multicall\n      console.log(\"Executing multicall...\");\n      const tx = await swapContract.multicall([multicallData], {\n        value: maticValue,\n        gasLimit: ethers.utils.hexlify(300000)\n      });\n      await tx.wait();\n      alert(\"Swap successful\");\n    } catch (error) {\n      console.error(\"Swap failed:\", error);\n      if (error.data && error.data.message) {\n        alert(`Swap failed: ${error.data.message}`);\n      } else {\n        alert(`Swap failed: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Swap MATIC and WETH to USDC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: account ? `Connected: ${account}` : \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"MATIC Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: maticAmount,\n        onChange: e => setMaticAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"WETH Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: wethAmount,\n        onChange: e => setWethAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Minimum USDC Amount Out:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: amountOutMin,\n        onChange: e => setAmountOutMin(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Recipient Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSwap,\n      children: \"Swap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Swap, \"YXOxDUgzH0DcPcE+rD2cuJJ4JPk=\");\n_c = Swap;\nexport default Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["React","useState","useEffect","ethers","SwapMultipleTokens","jsxDEV","_jsxDEV","swapContractAddress","WETH_ADDRESS","ERC20_ABI","Swap","_s","maticAmount","setMaticAmount","wethAmount","setWethAmount","amountOutMin","setAmountOutMin","recipient","setRecipient","account","setAccount","provider","setProvider","signer","setSigner","window","ethereum","providers","Web3Provider","connectWallet","alert","accounts","send","getSigner","error","console","handleSwap","swapContract","Contract","abi","wethContract","maticValue","utils","parseEther","wethValue","parseUnits","minOut","deadline","Math","floor","Date","now","maticBalance","getBalance","log","formatEther","wethBalance","balanceOf","formatUnits","gt","allowance","lt","approveTx","approve","wait","multicallData","interface","encodeFunctionData","tx","multicall","value","gasLimit","hexlify","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/aaryan/Desktop/assignment/frontend/frontend/src/Swap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport SwapMultipleTokens from \"./artifacts/contracts/SwapMultipleTokens.sol/SwapMultipleTokens.json\";\n\nconst swapContractAddress = \"0x17D41BF00f991Ee300DD7c85727C014026B94B52\"; // Replace with the deployed contract address\nconst WETH_ADDRESS = \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\"; // WETH address on Polygon\n\nconst ERC20_ABI = [\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function allowance(address owner, address spender) view returns (uint256)\",\n  \"function approve(address spender, uint256 amount) public returns (bool)\",\n];\n\nfunction Swap() {\n  const [maticAmount, setMaticAmount] = useState(\"\");\n  const [wethAmount, setWethAmount] = useState(\"\");\n  const [amountOutMin, setAmountOutMin] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [account, setAccount] = useState(null);\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n\n  useEffect(() => {\n    if (window.ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n    }\n  }, []);\n\n  const connectWallet = async () => {\n    if (!window.ethereum) return alert(\"Please install MetaMask\");\n    try {\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setAccount(accounts[0]);\n      const signer = provider.getSigner();\n      setSigner(signer);\n    } catch (error) {\n      console.error(\"Failed to connect wallet:\", error);\n    }\n  };\n\n  const handleSwap = async () => {\n    if (!signer) return alert(\"Please connect your wallet first\");\n\n    const swapContract = new ethers.Contract(\n      swapContractAddress,\n      SwapMultipleTokens.abi,\n      signer\n    );\n    const wethContract = new ethers.Contract(WETH_ADDRESS, ERC20_ABI, signer);\n\n    try {\n      const maticValue = ethers.utils.parseEther(maticAmount); // MATIC is the native currency\n      const wethValue = ethers.utils.parseUnits(wethAmount, 18);\n      const minOut = ethers.utils.parseUnits(amountOutMin, 6); // USDC typically has 6 decimals\n      const deadline = Math.floor(Date.now() / 1000) + 900; // 15 minutes from now\n\n      // Log Balances\n      const maticBalance = await provider.getBalance(account);\n      console.log(\"MATIC Balance:\", ethers.utils.formatEther(maticBalance));\n\n      const wethBalance = await wethContract.balanceOf(account);\n      console.log(\"WETH Balance:\", ethers.utils.formatUnits(wethBalance, 18));\n\n      // Ensure sufficient balance\n      if (ethers.utils.parseUnits(wethAmount, 18).gt(wethBalance)) {\n        alert(\"Insufficient WETH balance\");\n        return;\n      }\n\n      // Log Approval Status\n      const allowance = await wethContract.allowance(\n        account,\n        swapContractAddress\n      );\n      console.log(\"WETH Allowance:\", ethers.utils.formatUnits(allowance, 18));\n\n      // Approve WETH transfer if needed\n      if (allowance.lt(wethValue)) {\n        console.log(\"Approving WETH transfer...\");\n        const approveTx = await wethContract.approve(\n          swapContractAddress,\n          wethValue\n        );\n        await approveTx.wait();\n        console.log(\"WETH Approved\");\n      } else {\n        console.log(\"WETH transfer already approved\");\n      }\n\n      // Prepare multicall data\n      const multicallData = swapContract.interface.encodeFunctionData(\n        \"swapMaticAndWethForUsdc\",\n        [maticValue, wethValue, minOut, recipient, deadline]\n      );\n\n      // Execute multicall\n      console.log(\"Executing multicall...\");\n      const tx = await swapContract.multicall([multicallData], {\n        value: maticValue,\n        gasLimit: ethers.utils.hexlify(300000),\n      });\n      await tx.wait();\n      alert(\"Swap successful\");\n    } catch (error) {\n      console.error(\"Swap failed:\", error);\n      if (error.data && error.data.message) {\n        alert(`Swap failed: ${error.data.message}`);\n      } else {\n        alert(`Swap failed: ${error.message}`);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>Swap MATIC and WETH to USDC</h1>\n      <button onClick={connectWallet}>\n        {account ? `Connected: ${account}` : \"Connect Wallet\"}\n      </button>\n      <div>\n        <label>MATIC Amount:</label>\n        <input\n          type=\"text\"\n          value={maticAmount}\n          onChange={(e) => setMaticAmount(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>WETH Amount:</label>\n        <input\n          type=\"text\"\n          value={wethAmount}\n          onChange={(e) => setWethAmount(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Minimum USDC Amount Out:</label>\n        <input\n          type=\"text\"\n          value={amountOutMin}\n          onChange={(e) => setAmountOutMin(e.target.value)}\n        />\n      </div>\n      <div>\n        <label>Recipient Address:</label>\n        <input\n          type=\"text\"\n          value={recipient}\n          onChange={(e) => setRecipient(e.target.value)}\n        />\n      </div>\n      <button onClick={handleSwap}>Swap</button>\n    </div>\n  );\n}\n\nexport default Swap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,kBAAkB,MAAM,sEAAsE;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtG,MAAMC,mBAAmB,GAAG,4CAA4C,CAAC,CAAC;AAC1E,MAAMC,YAAY,GAAG,4CAA4C,CAAC,CAAC;;AAEnE,MAAMC,SAAS,GAAG,CAChB,0DAA0D,EAC1D,2EAA2E,EAC3E,yEAAyE,CAC1E;AAED,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,IAAIwB,MAAM,CAACC,QAAQ,EAAE;MACnB,MAAML,QAAQ,GAAG,IAAInB,MAAM,CAACyB,SAAS,CAACC,YAAY,CAACH,MAAM,CAACC,QAAQ,CAAC;MACnEJ,WAAW,CAACD,QAAQ,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACJ,MAAM,CAACC,QAAQ,EAAE,OAAOI,KAAK,CAAC,yBAAyB,CAAC;IAC7D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC/DZ,UAAU,CAACW,QAAQ,CAAC,CAAC,CAAC,CAAC;MACvB,MAAMR,MAAM,GAAGF,QAAQ,CAACY,SAAS,CAAC,CAAC;MACnCT,SAAS,CAACD,MAAM,CAAC;IACnB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACb,MAAM,EAAE,OAAOO,KAAK,CAAC,kCAAkC,CAAC;IAE7D,MAAMO,YAAY,GAAG,IAAInC,MAAM,CAACoC,QAAQ,CACtChC,mBAAmB,EACnBH,kBAAkB,CAACoC,GAAG,EACtBhB,MACF,CAAC;IACD,MAAMiB,YAAY,GAAG,IAAItC,MAAM,CAACoC,QAAQ,CAAC/B,YAAY,EAAEC,SAAS,EAAEe,MAAM,CAAC;IAEzE,IAAI;MACF,MAAMkB,UAAU,GAAGvC,MAAM,CAACwC,KAAK,CAACC,UAAU,CAAChC,WAAW,CAAC,CAAC,CAAC;MACzD,MAAMiC,SAAS,GAAG1C,MAAM,CAACwC,KAAK,CAACG,UAAU,CAAChC,UAAU,EAAE,EAAE,CAAC;MACzD,MAAMiC,MAAM,GAAG5C,MAAM,CAACwC,KAAK,CAACG,UAAU,CAAC9B,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;MACzD,MAAMgC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;;MAEtD;MACA,MAAMC,YAAY,GAAG,MAAM/B,QAAQ,CAACgC,UAAU,CAAClC,OAAO,CAAC;MACvDgB,OAAO,CAACmB,GAAG,CAAC,gBAAgB,EAAEpD,MAAM,CAACwC,KAAK,CAACa,WAAW,CAACH,YAAY,CAAC,CAAC;MAErE,MAAMI,WAAW,GAAG,MAAMhB,YAAY,CAACiB,SAAS,CAACtC,OAAO,CAAC;MACzDgB,OAAO,CAACmB,GAAG,CAAC,eAAe,EAAEpD,MAAM,CAACwC,KAAK,CAACgB,WAAW,CAACF,WAAW,EAAE,EAAE,CAAC,CAAC;;MAEvE;MACA,IAAItD,MAAM,CAACwC,KAAK,CAACG,UAAU,CAAChC,UAAU,EAAE,EAAE,CAAC,CAAC8C,EAAE,CAACH,WAAW,CAAC,EAAE;QAC3D1B,KAAK,CAAC,2BAA2B,CAAC;QAClC;MACF;;MAEA;MACA,MAAM8B,SAAS,GAAG,MAAMpB,YAAY,CAACoB,SAAS,CAC5CzC,OAAO,EACPb,mBACF,CAAC;MACD6B,OAAO,CAACmB,GAAG,CAAC,iBAAiB,EAAEpD,MAAM,CAACwC,KAAK,CAACgB,WAAW,CAACE,SAAS,EAAE,EAAE,CAAC,CAAC;;MAEvE;MACA,IAAIA,SAAS,CAACC,EAAE,CAACjB,SAAS,CAAC,EAAE;QAC3BT,OAAO,CAACmB,GAAG,CAAC,4BAA4B,CAAC;QACzC,MAAMQ,SAAS,GAAG,MAAMtB,YAAY,CAACuB,OAAO,CAC1CzD,mBAAmB,EACnBsC,SACF,CAAC;QACD,MAAMkB,SAAS,CAACE,IAAI,CAAC,CAAC;QACtB7B,OAAO,CAACmB,GAAG,CAAC,eAAe,CAAC;MAC9B,CAAC,MAAM;QACLnB,OAAO,CAACmB,GAAG,CAAC,gCAAgC,CAAC;MAC/C;;MAEA;MACA,MAAMW,aAAa,GAAG5B,YAAY,CAAC6B,SAAS,CAACC,kBAAkB,CAC7D,yBAAyB,EACzB,CAAC1B,UAAU,EAAEG,SAAS,EAAEE,MAAM,EAAE7B,SAAS,EAAE8B,QAAQ,CACrD,CAAC;;MAED;MACAZ,OAAO,CAACmB,GAAG,CAAC,wBAAwB,CAAC;MACrC,MAAMc,EAAE,GAAG,MAAM/B,YAAY,CAACgC,SAAS,CAAC,CAACJ,aAAa,CAAC,EAAE;QACvDK,KAAK,EAAE7B,UAAU;QACjB8B,QAAQ,EAAErE,MAAM,CAACwC,KAAK,CAAC8B,OAAO,CAAC,MAAM;MACvC,CAAC,CAAC;MACF,MAAMJ,EAAE,CAACJ,IAAI,CAAC,CAAC;MACflC,KAAK,CAAC,iBAAiB,CAAC;IAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,IAAIA,KAAK,CAACuC,IAAI,IAAIvC,KAAK,CAACuC,IAAI,CAACC,OAAO,EAAE;QACpC5C,KAAK,CAAC,gBAAgBI,KAAK,CAACuC,IAAI,CAACC,OAAO,EAAE,CAAC;MAC7C,CAAC,MAAM;QACL5C,KAAK,CAAC,gBAAgBI,KAAK,CAACwC,OAAO,EAAE,CAAC;MACxC;IACF;EACF,CAAC;EAED,oBACErE,OAAA;IAAAsE,QAAA,gBACEtE,OAAA;MAAAsE,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC1E,OAAA;MAAQ2E,OAAO,EAAEnD,aAAc;MAAA8C,QAAA,EAC5BxD,OAAO,GAAG,cAAcA,OAAO,EAAE,GAAG;IAAgB;MAAAyD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACT1E,OAAA;MAAAsE,QAAA,gBACEtE,OAAA;QAAAsE,QAAA,EAAO;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5B1E,OAAA;QACE4E,IAAI,EAAC,MAAM;QACXX,KAAK,EAAE3D,WAAY;QACnBuE,QAAQ,EAAGC,CAAC,IAAKvE,cAAc,CAACuE,CAAC,CAACC,MAAM,CAACd,KAAK;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1E,OAAA;MAAAsE,QAAA,gBACEtE,OAAA;QAAAsE,QAAA,EAAO;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3B1E,OAAA;QACE4E,IAAI,EAAC,MAAM;QACXX,KAAK,EAAEzD,UAAW;QAClBqE,QAAQ,EAAGC,CAAC,IAAKrE,aAAa,CAACqE,CAAC,CAACC,MAAM,CAACd,KAAK;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1E,OAAA;MAAAsE,QAAA,gBACEtE,OAAA;QAAAsE,QAAA,EAAO;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvC1E,OAAA;QACE4E,IAAI,EAAC,MAAM;QACXX,KAAK,EAAEvD,YAAa;QACpBmE,QAAQ,EAAGC,CAAC,IAAKnE,eAAe,CAACmE,CAAC,CAACC,MAAM,CAACd,KAAK;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1E,OAAA;MAAAsE,QAAA,gBACEtE,OAAA;QAAAsE,QAAA,EAAO;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjC1E,OAAA;QACE4E,IAAI,EAAC,MAAM;QACXX,KAAK,EAAErD,SAAU;QACjBiE,QAAQ,EAAGC,CAAC,IAAKjE,YAAY,CAACiE,CAAC,CAACC,MAAM,CAACd,KAAK;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1E,OAAA;MAAQ2E,OAAO,EAAE5C,UAAW;MAAAuC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACrE,EAAA,CA9IQD,IAAI;AAAA4E,EAAA,GAAJ5E,IAAI;AAgJb,eAAeA,IAAI;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}